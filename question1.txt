1. Как работают многопроцессорные системы?
 
 • Работает только один процессор
 • Передача данных никогда не осуществляется
 • Процессоры работают независимо
 √ Каждый процессор выполняет свою работу, одновременно сотрудничая с другими процессорами.
 • Данные обрабатываются только локально
 
2. Какие методы используются для связи между процессорами?
 
 √ Общая память или метод передачи сообщений.
 • Процессоры поддерживают связь без коммуникации
 • Только каналы связи хранят данные
 • Хранятся только локальные данные
 • Разные данные не передаются
 
3. Для каких задач используются систолические массивы?
 
 √ Для решения систем линейных уравнений со специальной структурой.
 • Используются только для обработки текста
 • Для выполнения простых вычислительных операций
 • Для разработки языков программирования
 • Обеспечивают сетевое соединение
 
4. Для чего используется глобальный механизм управления в системах параллельных вычислений?
 
 √ Для координации процессоров и управления выполнением алгоритмов
 • Не используется для обеспечения синхронной работы.
 • Для уменьшения передачи данных.
 • Всегда работает асинхронно.
 • Используется только для локальной связи.
 
5. Каковы преимущества использования ориентированных ациклических графов (DAG)?
 
 √ Облегчают описание параллельных алгоритмов, показывая последовательность операций и зависимости данных.
 • Применяются только в графических интерфейсах
 • Обеспечивают хранение данных
 • Увеличивают скорость передачи данных
 • Используются только в обработке изображений
 
6. Почему важен дизайн промежуточной сети параллельных компьютеров?
 
 • Обеспечивает синхронную работу.
 • Используется только для хранения данных в локальной памяти.
 • Только для разработки программного обеспечения.
 √ Определяет эффективность и скорость межпроцессорной связи
 • Разрывает связь многопроцессорных систем.
 
7. Для каких целей используются тесно связанные параллельные вычислительные системы на базе СБМУ?
 
 • Только для выполнения простых вычислительных операций.
 • Только для разработки компьютерных игр.
 • Для задач обработки текста.
 √ Для решения систем линейных уравнений со специальной структурой
 • Для увеличения скорости локальной сетевой связи.
 
8. Какие существуют способы связи между процессорами?
 

• Процессоры взаимодействуют друг с другом только через текстовые файлы.
 • Процессоры поддерживают связь только в одном направлении.
 • Только каналы связи передают данные.
 √ Для межпроцессорной связи используются общая память или метод передачи сообщений
 • Всегда сохраняются локальные данные.
 
9. Какова роль каналов связи в промежуточных сетях?
 
 • Выполняют только передачу изображений.
 • Всегда повторно обрабатывают данные.
 • Поддерживают процессоры в состоянии индивидуальной связи.
 √ Обеспечивают передачу данных между процессорами и управляют работой системы
 • Обеспечивают хранение данных.
 
10. В чём заключается задача маршрутизации в сетях передачи данных?
 
 • Используется для замедления скорости передачи данных.
 • Маршрутизация — это просто изменение входных данных.
 • Применяется только в локальных сетях.
 √ Задача маршрутизации заключается в оптимизации путей передачи данных
 • Это алгоритм, который хранит данные в сети.
 
11. Какова основная цель создания систем параллельных вычислений?
 
 • Используются для хранения данных.
 • Для ускорения разработки программного обеспечения.
 • Для увеличения мощности однопроцессорных систем.
 √ Для совместного выполнения вычислительных задач
 • Применяются только для обработки изображений.
 
12. В чём разница между процессорными массивами и многопроцессорными системами?
 
 • Многопроцессорные системы предназначены только для графических вычислений
 • Процессорные массивы используются только для обработки текста
 • Многопроцессорные системы всегда работают только с одним процессором
 √ Процессорные массивы тесно связаны с соседними элементами, тогда как многопроцессорные системы слабо связаны.
 • Функция процессорных массивов заключается только в хранении данных
 
13. Каковы особенности каналов связи в распределённых вычислительных системах?
 
 • Передают данные только в одном направлении
 • Каналы связи ограничивают передачу данных
 √ Каналы связи могут быть непредсказуемыми и изменяться во время работы системы.
 • Вся связь осуществляется только через физические соединения
 • Каналы всегда стабильны и неизменны
 
14. Как осуществляется связь между процессорами в распределённых системах?
 
 • Данные передаются только через локальную память
 • Всегда используются отдельные каналы связи
 • Данные передаются только с внешних дисков
 √ Процессоры взаимодействуют через промежуточную сеть, состоящую из каналов прямой связи.
 • Процессоры никогда не взаимодействуют друг с другом
 
15. Какова роль синхронизации при выполнении параллельных алгоритмов?
 
 • Используется для замедления передачи данных
 √ Для управления работой процессоров и облегчения выполнения алгоритма.
 • Только для увеличения энергопотребления процессоров
 • Для оптимизации графических интерфейсов

• Для создания повторяющихся циклов
 
16. Для каких задач используется технология СБМУ?
 
 • Только для передачи данных в локальных сетях
 • Для обработки музыкальных файлов
 • Используется только для обработки текста
 • Для оптимизации только однокомпьютерных систем
 √ Для решения систем линейных уравнений и выполнения быстрого преобразования Фурье.
 
17. Когда более подходящи процессорные массивы?
 
 • Только для локальной передачи данных.
 • Только для программ малых масштабов.
 • Всегда для асинхронно работающих систем.
 √ Для задач, разделённых по пространственным измерениям
 • Для вычислений только на одном процессоре.
 
18. Какова основная функция процессоров в системах параллельных вычислений?
 
 √ Управление командами, которые будут выполняться другими процессорами.
 • Всегда блокируют передачи данных
 • Отключают соединение между различными процессорами
 • Замедление передачи данных
 • Используются только для обработки графики
 
19. Для чего используется DAG (ориентированный ациклический граф)?
 
 • Используется только для задач обработки изображений.
 • Для проверки сетевых подключений компьютеров.
 • Для вычислений на графах.
 √ Для отображения последовательности операций и зависимости данных в параллельных алгоритмах
 • Для измерения мощности процессоров.
 
20. Что такое синхронная работа в параллельных компьютерах?
 
 • Только случайное распределение данных
 • Синхронизация используется только для замедления передачи данных
 √ Работа процессоров одновременно с общими глобальными тактовыми импульсами.
 • Все процессоры работают независимо друг от друга
 • Каждый процессор выполняет разные операции в разное время
 
21. В чём разница между SIMD и MIMD?
 
 • SIMD используется только в приложениях искусственного интеллекта
 • MIMD никогда не выполняет команды одновременно
 • SIMD работает только с одним процессором, MIMD всегда с двумя процессорами
 • MIMD всегда медленнее SIMD
 √ SIMD управляет множеством данных одной командой, а MIMD управляет различными командами одновременно.
 
22. Как классифицируются системы параллельных вычислений?
 
 • Только по скорости процессоров
 • По используемому программному обеспечению
 • По скорости передачи данных
 • Только по размеру компьютеров
 √ По типу и количеству процессоров, глобальному механизму управления и по синхронной/асинхронной работе.
 
23. Каковы основные причины необходимости параллельных и распределённых вычислений?
 

• Ускорение разработки программного обеспечения
 • Повторение одних и тех же операций
 √ Сокращение времени, требуемого для решения задач с большим объёмом вычислений.
 • Решение задач, связанных только с обработкой изображений
 • Увеличение скорости работы только однопроцессорных систем
 
24. В чем недостаток использования виртуальных каналов в каналах связи?
 
 • Передача пакетов только по одному пути.
 √ Увеличение задержек и снижение скорости передачи данных
 • Передача данных только через один канал.
 • Связь только с одним узлом.
 • Только обеспечение обнаружения ошибок.
 
25. Почему важна связность процессоров в топологии сети?
 
 • Только для увеличения ширины сети.
 √ Для обеспечения надежности связи
 • Только для обеспечения независимой связи.
 • Для обеспечения хранения пакетов.
 • Для увеличения числа узлов.
 
26. Какие факторы связаны с пропускной способностью канала связи?
 
 • Только количество каналов связи
 √ Служебные биты, управляющие пакеты и доступность ресурсов.
 • Только количество узлов
 • Увеличение числа пакетов
 • Передача данных только через один канал
 
27. Что означает связность узлов в топологиях сетей?
 
 • Связано только с количеством узлов
 √ Сохранение связности сети при удалении узлов.
 • Только количество соединений
 • Полная независимость узлов
 • Передача данных только в одном направлении
 
28. Почему важно обнаружение ошибок при управлении каналами связи?
 
 • Только для хранения данных.
 √ Для обеспечения точной передачи пакетов
 • Только для одного направления.
 • Для предотвращения распространения ошибочных сообщений.
 • Для увеличения количества каналов связи.
 
29. Когда требуется повторная передача пакетов?
 
 • Только для увеличения количества пакетов
 √ В случае неправильной передачи или потери пакетов.
 • Только во время обработки
 • При отправке в один узел
 • Когда линии связи свободны
 
30. В чем может заключаться одна из проблем передачи пакетов?
 
 • Передача данных только через один канал
 √ Ожидание доступности ресурсов в точке доставки пакета.
 • Необнаружение ошибок
 • Невозможность своевременного приема пакетов

• Потеря только одного пакета
 
31. Как измеряется пропускная способность каналов с пакетной передачей?
 
 • Скорость обработки данных
 √ Максимальная скорость передачи битов через соответствующий канал.
 • Количество каналов связи
 • Количество узлов
 • Количество пакетов
 
32. Каков один из факторов, влияющих на задержки в коммуникации?
 
 • Только увеличение количества каналов связи
 √ Алгоритмы, используемые для управления сетью.
 • Количество узлов
 • Хранение данных
 • Скорость обработки данных
 
33. Какова основная цель алгоритмов маршрутизации?
 
 • Увеличение количества каналов связи
 √ Выбор путей с минимальной общей задержкой для каждого пакета.
 • Обнаружение и исправление ошибок
 • Выбор только одного маршрута
 • Обеспечение хранения данных
 
34. Каковы два основных компонента алгоритмов управления каналом передачи данных (DLC) в виртуальных битовых каналах?
 
 • Механизмы, обеспечивающие только передачу пакетов
 √ Механизм распознавания начала и конца пакетов и механизм обнаружения ошибок.
 • Только управление каналами связи
 • Система для хранения данных
 • Компоненты, используемые для обработки данных
 
35. Как называется механизм, определяющий начало и конец пакетов в каналах связи?
 
 • Упорядочивание.
 √ Кадрирование
 • Фильтрация.
 • Регулирование.
 • Управление.
 
36. Что такое одноузловая и многоузловая широковещательная передача?
 
 • Передача только через один узел
 √ Одноузловая широковещательная передача — это отправка сообщения от одного процессора всем остальным, а многоузловая
— это отправка сообщений от всех узлов одновременно в один узел.
 • Обмен данными между различными узлами
 • Отправка только одного сообщения между двумя узлами
 • Отправка нескольких сообщений одновременно
 
37. Почему важно, чтобы топология сети соответствовала широкому диапазону алгоритмов?
 
 • Только для хранения данных
 √ Чтобы обеспечить эффективное выполнение вычислительной задачи.
 • Для увеличения мобилизуемых ресурсов
 • Для сокращения времени вычислений
 • Для количества каналов связи
 
38. Что обеспечивают алгоритмы управления потоком?

• Регулярную передачу данных
 √ Ожидание пакетов, пока ресурсы не станут доступны в точке назначения.
 • Обнаружение ошибок
 • Обеспечивают отправку пакетов в правильной последовательности
 • Обеспечивают только освобождение сети
 
39. Почему важна связность сети?
 
 • Только для отображения числа узлов
 √ Для измерения минимального числа узлов или дуг, которые нужно удалить, чтобы разделить сеть.
 • Для увеличения числа коммуникационных каналов
 • Как критерий размещения сети
 • Для обеспечения передачи данных только по одному каналу
 
40. Что показывает диаметр топологии сети?
 
 • Только расстояние между одним узлом
 √ Максимальное расстояние между любыми двумя узлами.
 • Количество узлов
 • Количество соединений в сети
 • Расстояние, необходимое для передачи данных
 
41. Что означает маршрутизация в каналах связи?
 
 • Методы, используемые для приёма данных
 √ Направление пакетов по сети к месту назначения.
 • Шифрование данных
 • Механизмы обнаружения ошибок
 • Системы, обеспечивающие только обработку пакетов
 
42. Что включает в себя время распространения?
 
 • Это только время получения данных
 • Время, необходимое для приёма пакета
 √ Время между передачей последнего бита пакета и его приёмом.
 • Время, обеспечивающее соответствующую обработку данных
 • Время ожидания на входе пакета
 
43. Что такое время передачи?
 
 • Только время, необходимое для приёма пакетов
 • Время, необходимое для обработки данных
 √ Время, необходимое для передачи всех битов пакета.
 • Это только время ожидания в очереди
 • Время, необходимое для подготовки пакетов
 
44. Когда возникает время ожидания в очереди?
 
 • Только когда данные обрабатываются
 • Во время приёма данных
 • Только когда очередь пуста
 √ Когда пакеты данных стоят в очереди на отправку.
 • Когда пакет готов
 
45. Что означает время обработки сообщения?
 
 • Время, необходимое для приёма данных
 • Время, необходимое для отправки пакетов
 √ Время, необходимое для подготовки данных к передаче.

• Это только время для соответствующей обработки
 • Это только время ожидания в очереди
 
46. Как выражается штраф за коммуникацию с помощью формулы?
 
 √ GP = TroTAL / TcoM.
 • GP = TcoM / TroTAL
 • GP = TroTAL + TcoM
 • GP = TroTAL – TcoM
 • GP = TcoM + TroTAL
 
47. На какие части делятся задержки в коммуникациях в параллельных и распределённых системах?
 
 • Только время обработки и время ожидания в очереди
 • Только приём данных
 • Только время ожидания в очереди
 √ Время обработки сообщения, время ожидания в очереди, время передачи и время распространения.
 • Только время передачи и время распространения
 
48. Какие основные технологические факторы влияют на развитие распределённых систем?
 
 • Для развития компьютерных игр
 √ Развитие технологий связи, увеличение скорости передачи данных и создание более мощных процессоров.
 • Применяется для уменьшения передачи данных
 • Только для хранения локальных данных
 • Используется для отключения процессорных соединений
 
49. Как используется высокоскоростная шина для внутрикластерной связи?
 
 √ Для быстрой и эффективной передачи данных между процессорами внутри кластера.
 • Замедляет передачу данных
 • Используется только для компьютерных игр
 • Основывается на хранении данных
 • Отключает процессорные соединения
 
50. В каких случаях системы MIMD более предпочтительны?
 
 • Работают только с одним процессором
 • Блокируют сетевые соединения
 √ Для сложных и масштабных вычислений, требующих одновременного выполнения различных инструкций.
 • Используются для очень простых операций
 • Применяются только для локальной обработки данных
 
51. Как определяются тип и количество процессоров в параллельных компьютерах?
 
 • Основывается только на локальных сетях
 • Только на основе требований программного обеспечения
 √ В зависимости от сложности вычислительной задачи и требований параллельного алгоритма.
 • На основе размера процессоров
 • Используется для приложений обработки текста
 
52. Как находится оптимальное решение в моделях параллельных вычислений?
 
 • Увеличивает скорость сетевых соединений
 • Используется только для обработки изображений
 • Используется только для компьютерных игр
 • Применяется для обработки локальных данных
 √ Через DAG-алгоритмы и различные алгоритмические подходы.
 
53. Как оценивается эффективность параллельных алгоритмов?

• Для обеспечения синхронной работы
 • Только по объёму локальной памяти
 • Только по скорости компьютеров
 √ На основе времени выполнения и используемых ресурсов.
 • Основывается на хранении данных
 
54. Каково значение маршрутизации в промежуточных сетях?
 
 • Маршрутизация не изменяет никакие данные
 • Используется только для передачи локальных данных
 • Пути всегда используются одинаково
 • Блокирует сетевое соединение
 √ Маршрутизация важна для предотвращения перегрузки некоторых путей и повышения эффективности передачи данных.
 
55. На основе каких параметров определяются уровни управления процессорами?
 
 • Связаны только с типом данных
 • Мощность процессоров определяется только связью с локальной памятью
 • Процессоры работают независимо
 √ На основе степени их совместной работы и независимости.
 • Используются для быстрой передачи данных
 
56. Как управляются задержки передачи данных?
 
 • Процессоры работают, не учитывая задержки
 • Задержки возникают только при хранении данных
 • Передача данных всегда осуществляется с одинаковой скоростью
 • Применяется для хранения локальных данных
 √ Оптимизируются для сокращения времени передачи сообщений через сеть.
 
57. Почему топология распределённых систем является нерегулярной?
 
 • Данные передаются только в одном направлении
 • Все системы всегда разрабатываются регулярно
 • Поддерживают связь только с локальной памятью
 √ Структура некоторых систем определяется внешними факторами и не разрабатывается заранее.
 • Сетевые соединения всегда стабильны
 
58. Каково применение гибридных конструкций в системах параллельных вычислений?
 
 • Обеспечивают синхронную работу
 • Хранят данные только в локальной памяти
 • Работают только с одним процессором
 √ Обеспечивают сочетание различных подходов к вычислениям.
 • Используются только для обработки изображений
 
59. Для чего используется алгоритм DAG?
 
 √ Для демонстрации некоторых ключевых аспектов параллельных вычислений.
 • Хранит данные в локальной памяти
 • Для уменьшения скорости передачи данных
 • Используется только в графических интерфейсах
 • Применяется для обработки текста
 
60. Что обозначает «Q» в уравнении задержки в пакетных каналах связи?
 
 • Время ожидания в канале связи.
 • Скорость передачи данных.
 • Количество пакетов.

• Время, необходимое для обработки данных.
 √ Время ожидания и задержки в очереди
 
61. Когда задержка очереди становится важной в алгоритмах маршрутизации?
 
 • При приеме данных
 • Только при использовании одного канала
 • Когда ошибки не обнаруживаются
 • Только при потере пакетов
 √ Когда в каналах имеется большой поток пакетов.
 
62. Когда требуется повторная передача пакетов?
 
 • Только во время обработки
 • Только для увеличения количества пакетов
 • Когда линии связи свободны
 √ В случае неправильной передачи или потери пакетов.
 • При отправке в один узел
 
63. Что увеличивает эффективность широковещательной передачи в топологии сети?
 
 • Увеличивает количество пакетов
 • Хранение данных
 • Только линии связи
 √ Увеличивает скорость и надежность связи.
 • Только увеличивает количество узлов
 
64. На каких факторах основаны алгоритмы маршрутизации?
 
 • Только на количестве независимых маршрутов
 • Только на количестве пакетов
 • Количество узлов
 √ Задержки, связанные с каждым соединением.
 • Обнаружение ошибок
 
65. Почему необходимо обнаружение ошибок при приеме пакетов?
 
 • Для управления каналами связи.
 • Для предотвращения ошибочной передачи.
 • Только для проверки соединений.
 √ Для правильного приема данных
 • Только для увеличения количества пакетов.
 
66. Что такое многоузловая широковещательная передача?
 
 √ Одновременная передача от всех узлов в один
 • Использование только одного канала.
 • Данные, отправляемые только в один узел.
 • Связь только с одним узлом.
 • Соответствующая связь между всеми узлами.
 
67. Какова основная цель одноузловой широковещательной передачи?
 
 • Данные, связанные только с одним узлом
 • Отправка данных только в один узел
 • Только для одного типа пакетов
 • Обнаружение ошибок
 √ Отправка одного и того же пакета от одного процессора ко всем остальным.
 
68. Что такое механизм обнаружения ошибок и повторной передачи пакетов?

• Проверка целостности.
 • Только управление каналами связи.
 • Прием пакетов.
 √ Обнаружение ошибок
 • Механизм ожидания в очереди.
 
69. Почему анализ штрафов связи может быть затруднен?
 
 • Из-за отсутствия обнаружения ошибок
 • Только с увеличением количества пакетов
 • Из-за длительного времени обработки данных
 √ Из-за использования виртуальных каналов и снижения скорости передачи данных.
 • Из-за недостаточного количества каналов связи
 
70. Как осуществляется параллельная передача сообщений в топологии сети?
 
 • Использованием только одного канала.
 • Отправкой с исправлением ошибок.
 • Только последовательной передачей.
 √ Разделением сообщения на несколько пакетов и отправкой их параллельно
 • Направлением данных только в один узел.
 
71. Каково общее время выполнения с использованием n процессоров при обратной подстановке?
 
 • O(n³)
 √ O(n).
 • O(n²)
 • O(log n)
 • O(log² n)
 
72. При каких условиях используется обратная подстановка для решения системы Ax = b?
 
 • Когда A — верхняя треугольная матрица
 √ Когда A — нижняя треугольная матрица.
 • Когда прямые методы не работают
 • Только при итерационных методах
 • Когда матрица квадратная
 
73. Согласно уравнению (1.2), какое выражение верно?
 
 • A¹ = I + L
 √ A¹ = (I + L² + L + ... + L^(2^rlog n - 1)).
 • A¹ = J + L
 • A¹ = L2r1ognl
 • A¹ = Lⁿ
 
74. Согласно лемме 1.1, как выражается A¹?
 
 • A¹ = L¹
 √ A¹ = (I + L + L² + ... + Lⁿ¹).
 • A¹ = L
 • A¹ = 2L
 • A¹ = I - L
 
75. С какой целью используется метод обратной подстановки для нижней треугольной матрицы?
 
 • Для создания итерационных алгоритмов
 √ Для решения системы линейных уравнений.
 • Для нахождения диагоналей матрицы

• Для простых математических операций
 • Для вычисления верхних треугольных матриц
 
76. Какое предположение делается при вычислении обратной треугольной матрицы?
 
 • aij = 0 для всех i
 √ aii ≠ 0 для всех i.
 • aij > 0 для всех j
 • aii < 0 ни для одного i
 • aii = 0 только для одного i
 
77. Как происходит обмен данными в модели синхронных вычислений?
 
 • Медленно и последовательно
 √ Немедленно и без потерь времени.
 • В зависимости от количества процессоров
 • Без обмена данными
 • Только в одном направлении
 
78. С какой скоростью итерационные алгоритмы приближаются к решению?
 
 • Квадратичной скоростью
 • Арифметической скоростью
 • Экспоненциальной скоростью
 √ Геометрической или в геометрической прогрессии.
 • Логарифмической скоростью
 
79. Какими методами можно решить задачу нахождения обратной матрицы A?
 
 • Только прямыми методами
 √ Прямыми и итерационными методами.
 • Элементарными методами
 • Только математическими методами
 • Только итерационными методами
 
80. Какой метод требует меньше памяти, если матрица A разреженная?
 
 • Прямые методы
 √ Итерационные методы.
 • Аналитические методы
 • Численные методы
 • Элементарные методы
 
81. В каких случаях итерационные методы предпочтительнее прямых методов?
 
 • Только для малых систем
 √ Когда n очень велико.
 • Для нелинейных задач
 • В случае постоянных матриц
 • Для одномерных задач
 
82. Какова основная характеристика итерационных методов?
 
 • Находят точное решение
 √ Они асимптотически приближаются к решению.
 • Обеспечивают быстрые результаты
 • Выполняются только один раз
 • Работают только с малыми системами
 
83. Когда прямые методы считаются предпочтительными?

• Применяются только для малых систем
 √ Когда можно найти точное решение с ограниченным числом операций.
 • Только если число переменных мало
 • Когда данные неполны
 • Когда итерационные методы не работают
 
84. Как выражается система линейных уравнений?
 
 • Ax + b = 0
 √ Ax = b.
 • x = Ab
 • bAx = 0
 • A + x = b
 
85. Какова основная цель алгоритмов адаптации?
 
 • Получить только стабильный результат
 • Создать стабильную структуру
 • Применять только для малых задач
 • Уменьшить время вычислений
 √ Обеспечить адаптацию системы к изменяющимся условиям.
 
86. Какой метод обычно используется для нахождения стационарного распределения в марковских цепочках?
 
 • K-средних
 • Нелинейный анализ
 • Метод Ньютона
 • Глубокое обучение
 √ Метод мощности.
 
87. Какое преимущество асинхронных методов в параллельных вычислениях?
 
 • Вычисления становятся медленнее
 • Работает только с самым большим узлом
 • Требуется синхронизация
 √ Каждый узел выполняет вычисления одновременно.
 • Требуется связь между данными
 
88. На каком анализе основываются марковские цепочки?
 
 • Только на нахождении лучших результатов
 • На случайном выборе данных
 • На случайном анализе
 √ На вероятностях перехода.
 • Только на анализе ошибочных моделей
 
89. Какое основное преимущество частично асинхронных методов?
 
 • Работа только с малыми данными
 • Использование только одной вычислительной точки
 • Требование повторной передачи данных
 √ Снижение времени вычислений.
 • Обеспечение синхронизации
 
90. Какие задачи применяются для алгоритмов стационарных точек?
 
 • Обработка изображений
 • Решение линейных уравнений
 • Логические операции

√ Задачи оптимизации.
 • Простые базы данных
 
91. Что означает "вероятность перехода" в марковских цепочках?
 
 • Вероятность возврата
 • Случайный процесс выбора
 • Необычные результаты
 √ Вероятность перехода от текущего состояния к следующему.
 • Только лучший выбор
 
92. Какая особенность алгоритмов стационарных точек для нерасширяемых операторов?
 
 • Давать только один результат
 • Направляют к определенным решениям
 • Точка никогда не меняется
 • Всегда обеспечивают максимальную точность
 √ Обеспечивают существование стационарной точки.
 
93. Какие методы используются для нахождения стационарного распределения в марковских цепочках?
 
 • Алгоритм K-средних
 • Глубокое обучение
 • Метод Ньютона
 • Метод случайного воздействия
 √ Метод мощности.
 
94. В каких областях более широко используются частично асинхронные методы?
 
 • Только для малых вычислительных точек
 • Работа с малыми данными
 √ Распределенные вычисления и большие данные.
 • Автоматический анализ текста
 • Анализ изображений
 
95. Какие основные особенности марковских цепочек?
 
 • Работа на основе линейных моделей
 • Вычисления, ориентированные только на лучший результат
 • Получение только ошибочных результатов
 • Нахождение стационарного распределения
 √ Случайные процессы, основанные на вероятностях перехода.
 
96. На каком основном принципе основаны алгоритмы адаптации?
 
 • Обеспечение стабильности данных
 • Случайный анализ
 • Оставаться стабильным в предыдущем состоянии
 • Применение простых моделей
 √ Адаптация к изменениям в системе.
 
97. Какой метод используется для нахождения стационарного распределения в марковских цепочках?
 
 • Случайные деревья
 • Глубокое обучение
 • Необычные функции
 √ Метод мощности.
 • Синхронные параллельные алгоритмы
 
98. Какое преимущество частично асинхронных итеративных методов?

• Полная синхронизация.
 • Требование чрезмерных данных.
 • Повторный обмен данных.
 √ Экономия памяти
 • Использование только одной вычислительной точки.
 
99. Какую среду используют в алгоритмах стационарных точек для нерасширяемых операторов?
 
 • Метод Ньютона
 • Метод Гаусса-Зейделя
 • Случайные деревья
 √ Теорема о стационарной точке Банака.
 • K-средних
 
100. Асинхронные методы в основном ускоряют какие работы?
 
 • Операции, выполняемые только контроллерами
 • Правильную сортировку
 • Линейные решения
 √ Параллельные работы.
 • Одноточечные вычисления
 
101. Для чего применяются алгоритмы адаптации?
 
 • В стабильных структурах
 • В логических правилах
 • Для нестабильных данных
 √ В автоматических системах принятия решений.
 • В линейной оптимизации
 
102. Какую цель преследуют алгоритмы адаптации?
 
 • Применить простой модель
 • Обеспечить оптимизацию
 • Изменить структуру данных
 √ Обеспечить адаптацию системы к изменениям.
 • Обеспечить стабильность данных
 
103. В каких областях применяются марковские цепочки?
 
 • Логический анализ
 • Связь баз данных
 • Обработка изображений
 √ Моделирование языка.
 • Визуализация графиков
 
104. Какая особенность частично асинхронных итеративных методов делает их эффективными?
 
 • Работают только с малыми объемами данных
 • Все узлы работают одновременно
 • Только одна вычислительная точка
 √ Каждый узел использует только свои данные.
 • Требуется только максимальная вычислительная мощность
 
105. Что обеспечивает метод «разделяй и властвуй», используемый в параллельных алгоритмах?
 
 • Только увеличивает хранение данных
 • Увеличивает количество процессоров
 • Ограничивает синхронную работу

√ Делает процесс вычисления быстрее и эффективнее.
 • Уменьшает количество каналов связи
 
106. Какой метод более эффективен для решения системы линейных уравнений?
 
 √ Обратная подстановка.
 • Квадратичный метод
 • Итерационный метод
 • Прямой метод
 • Геометрический метод
 
107. Когда происходит обмен данными в модели синхронных вычислений?
 
 • Медленно и последовательно
 √ Немедленно и без потерь времени.
 • В зависимости от количества процессоров
 • Без обмена данными
 • Только в одном направлении
 
108. Каково основное преимущество метода обратной подстановки в параллельных алгоритмах?
 
 • Применение только к малым системам
 √ Высокая эффективность и меньшие требования к связи.
 • Большой объем занимаемой памяти
 • Ограниченность количеством процессоров
 • Отсутствие быстрых результатов
 
109. Когда параллельный алгоритм обратной подстановки является более практичным?
 
 • При больших объемах данных
 √ Когда количество процессоров ограничено.
 • Когда используются только прямые методы
 • При снижении скорости вычислений
 • Когда синхронная работа невозможна
 
110. Как влияет стоимость связи на метод обратной подстановки?
 
 • Оптимизирует работу процессоров
 √ Может привести к увеличению времени с постоянным коэффициентом.
 • Уменьшает количество процессоров
 • Увеличивает связи
 • Ускоряет вычисления
 
111. Какова основная цель метода блочной разбиения матриц?
 
 • Облегчить хранение данных
 √ Ускорить вычисления и сбалансировать нагрузку процессоров.
 • Передача данных
 • Увеличить количество процессоров
 • Обеспечить синхронную работу
 
112. Что означает штраф за связь в параллельных алгоритмах?
 
 • Избыточное количество процессоров
 √ Затраты на передачу данных и задержки.
 • Работа только одного процессора
 • Координация процессоров
 • Синхронная передача данных
 
113. В каких архитектурах используется параллельная реализация метода обратной подстановки?

• Системы с перекрестными связями
 √ Линейные массивы и гиперкубы.
 • Системы с общей памятью
 • Итерационные модели
 • Верхние треугольные матрицы
 
114. Как работают любые два процессора в модели синхронных вычислений?
 
 • Работают медленно и последовательно
 √ Немедленно обмениваются данными.
 • Не взаимодействуют
 • Работают только в одном направлении
 • Передают данные по одному
 
115. Что можно сделать, чтобы уменьшить штраф за связь в архитектуре процессора?
 
 • Оптимизировать данные
 √ Уменьшить количество процессоров.
 • Увеличить скорость обработки данных
 • Использовать прямые методы
 • Применить итерационные методы
 
116. Как выражается эффективность параллельного алгоритма?
 
 • Tp(n)/T*(n)
 √ T*(n)/(pTp(n)).
 • T*(n)/pTp(n)
 • p/(T*(n))
 • pTp(n)/T*(n)
 
117. Какова временная сложность последовательных алгоритмов для решения задачи Ax = b?
 
 • O(log n)
 √ O(n²).
 • O(n)
 • O(log² n)
 • O(n³)
 
118. Какова общая временная сложность последовательного алгоритма обратной подстановки?
 
 • O(log n)
 √ O(n²).
 • O(n)
 • O(log² n)
 • O(n³)
 
119. Какой подход чаще всего используется в ограниченной оптимизации?
 
 √ Ортогональная проекция.
 • Только максимальные значения
 • Анализ двойного графа
 • Предполагаемая точка
 • Анализ невыпуклого множества
 
120. Для каких типов задач применяется алгоритм RGS?
 
 √ Математическая оптимизация.
 • Диагонали матриц
 • Нелинейные уравнения

• Синхронные вычисления
 • Алгебраические уравнения
 
121. Для каких типов матриц используется формула итерации SOR?
 
 √ Нижние треугольные матрицы.
 • Верхние треугольные матрицы
 • Круговые матрицы
 • Симметричные матрицы
 • Квадратные матрицы
 
122. Для каких типов системы уравнений применяется метод Гаусса-Зейделя?
 
 • Задачи математической оптимизации
 √ Система линейных уравнений.
 • Дифференциальные уравнения
 • Алгебраические уравнения
 • Система нелинейных уравнений
 
123. Какова основная особенность алгоритма Якоби?
 
 • Большое количество процессоров
 √ Содержит умножение матрицы на вектор на каждой итерации.
 • Уменьшение перекрестных связей
 • Высокая скорость вычислений
 • Оба матрицы равны друг другу
 
124. Какой метод позволяет вычислить обратную матрицу за время O(n²)?
 
 • Для диагональных матриц
 • Через нелинейные алгоритмы
 √ Через обратную подстановку.
 • Итерационным методом
 • Методом Ньютона
 
125. В каких случаях итерационные методы более эффективны?
 
 • Для плотных матриц
 • Только для квадратных матриц
 √ Для разреженных матриц.
 • Для геометрических матриц
 • Для последовательных матриц
 
126. Для каких типов матриц применяется алгоритм обратной подстановки?
 
 • Симметричные матрицы
 • Квадратные матрицы
 • Верхние треугольные матрицы
 √ Нижние треугольные матрицы.
 • Круговые матрицы
 
127. Для решения каких задач применяются параллельные прямые методы?
 
 • Для численного интегрирования
 • Для дифференциальных уравнений
 • Для решения нелинейных уравнений
 • Для математической оптимизации
 √ Для решения системы линейных уравнений.
 
128. С какой целью используется алгоритм, предложенный Цански?

• Для уменьшения количества процессоров
 • Для нахождения геометрической прогрессии
 • Для решения нелинейных уравнений
 √ Для вычисления обратной матрицы за время O(log² n).
 • Для оптимизации диагональных матриц
 
129. С какой целью матрица приводится к треугольной форме?
 
 • Для увеличения плотности данных
 • Для снижения затрат на передачу данных
 • Для оптимизации работы процессоров
 √ Для упрощения обратной подстановки.
 • Для уменьшения скорости вычислений
 
130. Какой алгоритм используется для решения системы линейных уравнений Ax = b?
 
 • Метод Рунге-Кутты
 • Метод Ньютона
 √ Решение через приведение к треугольной форме.
 • Метод Гаусса-Зейделя
 • Вычисление обратной матрицы
 
131. Какой метод используется для решения системы линейных уравнений?
 
 • Дифференциальный метод
 • Итерационный метод
 • Геометрический метод
 √ Обратная подстановка.
 • Симметричный метод
 
132. Какова основная цель метода блочного разбиения матриц?
 
 • Обеспечить синхронную работу
 • Передача данных
 √ Увеличить скорость вычислений и сбалансировать нагрузку процессоров.
 • Увеличить количество процессоров
 • Облегчить хранение данных
 
133. Какой метод наиболее эффективен для снижения штрафа за связь в архитектуре процессора?
 
 • Использовать только один процессор
 • Увеличить хранение данных
 • Использовать прямые методы
 • Применить итерационные методы
 √ Сократить количество процессоров.
 
134. Какой основной метод используется для вычисления обратной треугольной матрицы?
 
 • Итерационный метод
 √ Обратная подстановка.
 • Геометрическая прогрессия
 • Прямой метод
 • Система с перекрестной связью
 
135. Что является причиной штрафа за связь в модели синхронных вычислений?
 
 • Большое количество процессоров
 • Потери связи между процессорами
 • Низкая скорость вычислений

• Медленная обработка данных
 √ Обмен данными между процессорами.
 
136. Для каких типов матриц метод обратной подстановки наиболее подходит?
 
 • Круговые матрицы
 • Верхние треугольные матрицы
 • Квадратные матрицы
 √ Нижние треугольные матрицы.
 • Симметричные матрицы
 
137. Как оценивается эффективность метода обратной подстановки?
 
 • O(log² n)
 • O(n)
 • O(n²)
 √ O(1).
 • O(log n)
 
138. Какой метод используется для нижних треугольных матриц?
 
 • Методы геометрической прогрессии.
 • Итерационный метод.
 • Метод верхней треугольной матрицы.
 √ Обратная подстановка
 • Метод с перекрестной связью.
 
139. Каково основное различие между методами Гаусса-Зейделя и Якоби?
 
 √ Гаусс-Зейдель работает последовательно, Якоби — параллельно.
 • Число итераций для обоих методов одинаково
 • Гаусс-Зейдель работает параллельно, Якоби — последовательно
 • Оба метода работают последовательно
 • Оба метода применяются только для малых матриц
 
140. Какова основная формула итерации SOR?
 
 • X = Ab
 • A = D + L
 • Ax = b
 √ X(t + 1) = (1 - ω)x(t) - ωD¹ [Lx(t + 1) + Ux(t) – b].
 • D¹B x(t)
 
141. Какие свойства имеет метод Гаусса-Зейделя?
 
 • Приближение по геометрической прогрессии
 • Применение для квадратных матриц
 √ Итеративное последовательное приближение.
 • Экспоненциальная скорость приближения
 • Вычисления в синхронном режиме
 
142. В каких областях широко используется метод Ричардсона?
 
 • В решении разреженных матриц
 • В решении дифференциальных уравнений
 • В решении алгебраических уравнений
 √ В математической оптимизации и решении нелинейных уравнений.
 • В вычислении верхних треугольных матриц
 
143. Какова основная цель алгоритма SOR?

• Увеличение плотности данных
 • Снижение затрат на передачу данных
 • Оптимизация работы процессоров
 √ Увеличение скорости итерации.
 • Снижение времени вычислений
 
144. Какое время требуется для вычисления обратной матрицы по алгоритму Цанки?
 
 • O(log n)
 • O(n)
 • O(n²)
 • O(n³)
 √ O(log² n).
 
145. Для каких типов матриц наиболее подходит метод Якоби?
 
 • Симметричные матрицы
 • Квадратные матрицы
 • Верхние треугольные матрицы
 √ Диагонально доминирующие матрицы.
 • Круговые матрицы
 
146. Для каких проблем используются параллельные итеративные методы?
 
 • Для алгебраических уравнений
 • Для симметричных матриц
 • Для математической оптимизации
 • Для дифференциальных уравнений
 √ Для решения систем линейных уравнений.
 
147. В каких случаях проблема многоточечного распространения решается более эффективно?
 
 • В разреженных матрицах
 • В нелинейных уравнениях
 • В линейных массивах
 • В общих системах памяти
 √ В гиперкубической архитектуре.
 
148. Какой параметр используется для ускорения сходимости итерации в алгоритме SOR?
 
 • Скорость передачи данных
 • Количество итераций
 • Количество процессоров
 √ Коэффициент релаксации.
 • Скорость вычислений
 
149. Как выражается формула итерации метода Ричардсона?
 
 • bAx = 0
 • Ax = b
 • A + x = b
 √ X(t + 1) = (I - ωA)x(t) + ωb.
 • X = Ab
 
150. Из каких элементов состоит формула итерации SOR?
 
 • D = L + U
 • Ax = b
 • A = L + U

√ (1 - ωD¹L) – I [(1 - ω)L - ωD¹U].
 • X(t) = Ab
 
151. Каково представление матрицы для метода Гаусса-Зейделя?
 
 • A = D + I
 • A = U + L
 √ A = L + D + U.
 • A = D + L
 • A = I + L + U
 
152. Как матрично выражается алгоритм Якоби?
 
 • A + x = b
 • Ax = b
 • D¹B x(t)
 • x = Ab
 √ x(t + 1) = -D¹B x(t) + D¹b.
 
153. Каковы условия сходимости итеративных методов?
 
 • В синхронных системах
 • Только для линейных уравнений
 • В случаях с высокой скоростью вычислений
 • Для нелинейных уравнений
 √ Если они сходятся, приводят к желаемому решению.
 
154. В каких системах возникает проблема многоточечного распространения?
 
 √ Архитектура передачи сообщений.
 • Общая память
 • Алгебраические системы
 • Дифференциальные уравнения
 • Числовая интеграция
 
155. Какой метод используется для быстрого обращения матриц?
 
 • Метод Якоби
 • Алгоритм Ричардсона
 • Метод Ньютона
 √ Алгоритм Цанки.
 • Метод Гаусса-Зейделя
 
156. Какой параметр изменяется для увеличения скорости итераций алгоритма SOR?
 
 • Количество итераций
 • Канал передачи данных
 • Количество процессоров
 √ Коэффициент релаксации.
 • Скорость вычислений
 
157. Какой метод используется для вычисления обратной матрицы нижней треугольной матрицы?
 
 • Метод Ньютона
 • Диагональный алгоритм
 • Метод Гаусса-Зейделя
 √ Обратная подстановка.
 • Итеративный метод
 
158. Какое уравнение решается методом Ричардсона?

• Ax = b
 • x(t) = Ab
 √ x(t + 1) = (I - -yA)x(t) + -yb.
 • bAx = 0
 • A + x = b
 
159. Какова формула итерации SOR?
 
 • x(t + 1) = Lx(t) + Ux(t)
 • x(t + 1) = Ax(t)
 • x(t + 1) = D¹Bx(t)
 √ (1 - -y)x(t) - -yD¹ [Lx(t + 1) + Ux(t) - b].
 • x(t) = Ax + b
 
160. Какой параметр влияет на скорость сходимости в итерационных методах?
 
 • Количество процессоров
 • Скорость передачи данных
 • Время вычислений
 √ Количество итераций.
 • Объем памяти
 
161. Какая выгода от отсутствия синхронизации в асинхронных системах?
 
 • Равномерная работа всех процессоров
 • Медленная работа
 • Ошибки при вычислениях
 √ Высокая масштабируемость.
 • Потеря данных
 
162. Какое преимущество асинхронных процессорных сетей в распределенных системах?
 
 • Централизованное управление ресурсами
 • Синхронная работа процессоров
 • Одновременная обработка данных
 √ Независимая работа процессоров.
 • Медленная обработка данных
 
163. Как организована параллельная обработка в модели с несколькими процессорами?
 
 • Работает только один процессор
 • Процессоры работают только в нулевой интервал
 • Процессоры начинают работу одновременно
 √ Процессоры начинают работу независимо, и результаты синхронно обновляются.
 • Все процессоры работают только последовательно
 
164. Какой метод в алгоритмах балансировки нагрузки оптимизирует передачу данных?
 
 • Алгоритм Дейкстры
 • Алгоритм поиска в глубину
 • Алгоритм жадного выбора
 √ Алгоритм round-robin.
 • Алгоритм эвристики
 
165. В какой архитектуре сетей асинхронные параллельные алгоритмы наиболее эффективны?
 
 • В базах данных
 • В сетях с одним процессором
 • В синхронных сетях

√ В распределенных сетях без центрального управления.
 • В малых центрах обработки данных
 
166. Какое условие должно быть выполнено для того, чтобы алгоритм градиентного спуска нашел конечный результат?
 
 • Функция должна быть неизменной
 • Функция должна иметь несколько максимумов
 • Функция должна быть нестабильной
 √ Функция должна иметь только один минимум.
 • Функция должна быть недифференцируемой
 
167. Какие критерии учитываются при применении балансировки нагрузки?
 
 • Шифрование данных
 • Выбор только асинхронного метода работы
 • Усиление уязвимостей безопасности
 √ Производительность сетевых устройств.
 • Направление данных в одну точку
 
168. Для чего используется алгоритм градиентного спуска?
 
 • Для повышения производительности сетевых устройств.
 • Для шифрования данных.
 √ Для минимизации функции потерь
 • Для обеспечения безопасности сети.
 • Для построения сетевой архитектуры.
 
169. Какое основное преимущество асинхронной параллельной обработки?
 
 • Работает только в единичном временном интервале.
 • Меньшее использование ресурсов.
 • Независимая работа сетевых устройств.
 • Использует только один ресурс.
 √ Быстрое получение результатов
 
170. Какое главное преимущество алгоритма Stochastic Gradient Descent (SGD)?
 
 • Часто неправильно находит функцию потерь.
 • Оценивает результат, используя все данные.
 • Работает только с очень простыми функциями.
 √ Быстрое получение результата
 • Работает только с большими данными.
 
171. В каких типах сетей широко используются алгоритмы балансировки нагрузки?
 
 • В случайных базах данных
 • В социальных сетях
 √ В больших центрах обработки данных.
 • В сетях безопасности
 • В малых сетях
 
172. Как функционируют процессоры в синхронной параллельной обработке?
 
 • Процессоры работают независимо
 √ Начинаются одновременно, и результаты обновляются.
 • Каждый процессор работает по отдельности
 • Процессоры работают только последовательно
 • Работает только один процессор
 
173. Какие основные шаги включает алгоритм градиентного спуска?

• Оценка функции потерь
 • Изменение исходного кода
 • Оптимизация сетевых нагрузок
 √ Оптимизация вверх.
 • Попытка найти минимум функции
 
174. Какое преимущество обеспечивает асинхронная маршрутизация в распределенных сетях?
 
 • Медленная работа сети
 • Управление с одной точки
 • Больше сетевых ошибок
 √ Меньше центрального управления.
 • Параллельная обработка всех данных
 
175. Как работает Stochastic Gradient Descent (SGD)?
 
 • Все результаты сравниваются параллельно
 • Использует все данные
 • Оптимизирует, выбирая случайные данные
 √ Основан на одном единственном значении данных.
 • Выбирает только наивысшие результаты
 
176. Когда алгоритм градиентного спуска наиболее эффективен?
 
 • Только с данными в реальном времени.
 • При малых данных.
 • Только с нулевыми данными.
 √ При больших данных
 • Когда все данные обрабатываются одновременно.
 
177. Какая основная цель алгоритмов балансировки нагрузки?
 
 √ Равномерное распределение данных по сети.
 • Шифрование данных
 • Управление всей сетью
 • Увеличение скорости сетевых устройств
 • Точная передача данных
 
178. В какой модели несколько процессоров обновляют одни и те же переменные?
 
 • В синхронной параллельной обработке
 • В последовательной обработке
 • В модели обратного распространения
 • В графовом алгоритме
 √ В асинхронной параллельной обработке.
 
179. Какова основная особенность ограниченной оптимизации?
 
 • Поиск различных максимальных значений
 √ Минимизация затрат в заданном множестве.
 • Применение максимальной нормы
 • Приближение в любой точке
 • Расширение множества
 
180. К какой точке приближаются с помощью итерационных методов?
 
 • К максимальной точке
 √ К фиксированной точке.
 • К множеству общих решений

• Только к глобальной точке
 • К минимальной точке
 
181. Какова основная область применения вариационных неравенств?
 
 • Генетические анализы
 √ Теория игр и исследования равновесия.
 • Дифференциальные уравнения
 • Биологическое моделирование
 • Социальные науки
 
182. Какая норма чаще всего используется в неограниченной оптимизации?
 
 • Общая стандартная норма
 √ Взвешенная максимальная норма.
 • Ограниченная норма
 • Двойная норма
 • Линейная норма
 
183. В каких случаях применяются методы нелинейной оптимизации?
 
 • Только для линейных уравнений
 √ Для систем различных уравнений.
 • При поиске фиксированных точек
 • Для максимальных решений
 • В симметричных функциях
 
184. Какое основное преимущество итерации псевдосжатия?
 
 • Более быстрое получение результатов
 √ Работа при слабых условиях.
 • Применение нелинейной оптимизации
 • Работа с анализом данных
 • Поиск максимальной точки
 
185. Каково значение нормы в итеративных методах?
 
 • Увеличение количества итераций
 √ Определение эффекта сжатия.
 • Разные выпуклые функции
 • Проекция данных
 • Ограниченная оптимизация
 
186. Что указывает условие F(x) = 0?
 
 • Глобальное максимальное значение
 √ Минимизацию функции затрат.
 • Нелинейные функции
 • Интерактивные методы решения
 • Максимальные решения
 
187. Что означает ортогональная проекция на множество "X"?
 
 • Не проецирование данных
 √ Поиск ближайшей точки по евклидовой норме.
 • Поиск максимальных значений
 • Построение вариационных неравенств
 • Удаление от проекционных точек
 
188. Какой подход чаще всего используется в ограниченной оптимизации?

• Предполагаемая точка
 √ Ортогональная проекция.
 • Только максимальные значения
 • Анализ двойного графа
 • Анализ не выпуклых множеств
 
189. В каком случае обеспечивается сходимость итерационных методов?
 
 • Когда приближаемся к максимальному решению
 √ Когда значение функции затрат уменьшается.
 • Только при изменении нормы
 • Когда количество итераций остается постоянным
 • Только когда количество итераций увеличивается
 
190. Что представляет собой множество "X" в оптимизации?
 
 • Ограничения
 √ Возможное множество решений.
 • Предположения
 • Только максимальные решения
 • Только линейные пространства
 
191. Какова основная особенность итерации псевдосжатия?
 
 • Постоянство итерации
 √ Наличие фиксированной точки.
 • Решение только нелинейных уравнений
 • Отсутствие условия непрерывности
 • Решение только линейных уравнений
 
192. В какой области в основном применяется эффект сжатия?
 
 • Цифровая обработка изображений
 √ Математические модели и оптимизация.
 • Молекулярная биология
 • Анализ социальных сетей
 • Генетические анализы
 
193. Какова роль фиксированной точки в вариационном неравенстве?
 
 • Только для математической оптимизации
 √ Обеспечение равновесия в нелинейных уравнениях.
 • Простое вычисление интегральных значений
 • Не имеет никакого значения
 • Обеспечение распространения данных
 
194. Какие области применения функционального анализа?
 
 • Социальные науки
 √ Математика и экономика.
 • Химический анализ
 • История
 • Биология
 
195. Какой результат достигается при применении эффекта сжатия?
 
 • Возникновение нефиксированной точки
 √ Поиск фиксированной точки.
 • Непосредственный поиск максимального решения

• Увеличение выпуклой функции
 • Минимизация затрат
 
196. Какой метод чаще всего используется в нелинейной оптимизации?
 
 √ Метод градиентного спуска.
 • Статические аналитические методы
 • Графический анализ
 • Численное интегрирование
 • Метод максимального правдоподобия
 
197. Какой метод используется для увеличения сходимости итерационного процесса?
 
 • Увеличение скорости вычислений
 √ Коэффициент релаксации.
 • Изменение фиксированной точки
 • Изменение нормы
 • Только увеличение количества итераций
 
198. Почему взвешенная максимальная норма важна при выборе нормы?
 
 • Для решения дифференциальных уравнений
 √ Для увеличения эффекта сжатия.
 • Для расширения геометрического анализа
 • Для увеличения псевдосжатия
 • Для оптимизации нелинейных уравнений
 
199. Каково значение выпуклой функции в оптимизации?
 
 • Поиск фиксированной точки
 • Применение двойного интегрирования
 √ Обеспечение глобальной минимизации.
 • Увеличение функции F
 • Поиск максимального решения
 
200. Какие условия требуются в ограниченной оптимизации?
 
 • Множество X должно быть открытым
 • Множество X должно быть пустым
 • Множество X должно быть не выпуклым
 √ Множество X должно быть замкнуто и выпукло.
 • Множество X должно быть только математическим
 
201. Что означает изменение эффекта сжатия в зависимости от нормы?
 
 • Изменение нормы не влияет на сжатие
 • Эффект сжатия одинаков во всех нормах
 • Сжатие возможно только в одной норме
 √ В разных нормах может быть или не быть сжатие.
 • Сжатие происходит в соответствии с нормой
 
202. К какому уравнению относится задача минимизации функции затрат?
 
 • v'F(x) ≠ 0
 • v'F(x) = 1
 √ v'F(x) = 0.
 • v'F(x) < 0
 • v'F(x) > 0
 
203. В какой области в основном используется итерация псевдосжатия?

• Для экономического моделирования
 • Для различных методов оптимизации
 • Для увеличения эффекта сжатия
 √ Для решения нелинейных уравнений.
 • Для анализа данных
 
204. Когда используется вариационное неравенство?
 
 • Для решения дифференциальных уравнений
 • Для статистического анализа
 • Только в инженерном дизайне
 • Только в линейном программировании
 √ В исследованиях равновесия теории игр.
 
205. Что включает в себя неограниченная оптимизация?
 
 • Поиск глобального максимума
 • Решение нелинейных уравнений
 √ Минимизация функции затрат.
 • Увеличение функции F(x)
 • Поиск максимального значения
 
206. Что означает фиксированная точка в процессе итерации?
 
 • Точка, в которой нет изменений
 • Точка, где T(x*) = 2x*
 • Точка, где T(x*) < x*
 √ Точка, удовлетворяющая условию T(x*) = x*.
 • Точка, где T(x*) > x*
 
207. Каково основное отличие псевдосжимаемой итерации от сжимаемой?
 
 • Модуль сжатия больше
 • Псевдосжимаемая итерация всегда обеспечивает быструю сходимость
 √ Псевдосжимаемая итерация имеет более слабые условия.
 • Сжимаемая итерация работает только для линейных уравнений
 • Псевдосжимаемая итерация не сходится к фиксированной точк
 
208. Какой интервал охватывает параметр "a" в эффекте сжатия?
 
 √ (0, 1).
 • (-1, 0)
 • (1, 2)
 • (-2, -1)
 • (2, 3)
 
209. Каково основное определение итерации сжимаемости?
 
 • Итерация, не сходящаяся к множеству
 • Только для решения линейных задач
 • Без какого-либо приближения
 √ Итерация, сходящаяся к фиксированной точке.
 • Уменьшение переменных на каждой итерации
 
210. Какова основная характеристика итеративных методов для решения нелинейных задач?
 
 • Непредсказуемые результаты
 • Только для решения линейных уравнений
 • Медленная сходимость

√ Приближение к фиксированной точке.
 • Только для задач оптимизации
 
211. В каких методах используется параллельное умножение матриц на векторы?
 
 • Дифференциальные и алгебраические методы
 • Методы SOR и RGS
 • Методы Ньютона и Гаусса-Зейделя
 • Итеративные и экспоненциальные методы
 √ Методы Якоби, Гаусса и Ричардсона.
 
212. Когда обеспечивается сходимость методов итерации?
 
 • Когда приближается к максимальному решению
 √ Когда значение функции затрат уменьшается.
 • Только при изменении нормы
 • Когда количество итераций остается постоянным
 • Только при увеличении количества итераций
 
213. Что представляет собой множество "X" в оптимизации?
 
 • Ограничения
 √ Возможное множество решений.
 • Предположения
 • Только максимальные решения
 • Только линейные пространства
 
214. Какова основная характеристика псевдосжатия?
 
 • Постоянство итерации
 √ Наличие фиксированной точки.
 • Решение только нелинейных уравнений
 • Отсутствие условия непрерывности
 • Решение только линейных уравнений
 
215. В какой области применяется эффект сжатия?
 
 • Обработка цифровых изображений
 √ Математические модели и оптимизация.
 • Молекулярная биология
 • Анализ социальных сетей
 • Генетические анализы
 
216. Какова роль фиксированной точки в вариационных неравенствах?
 
 • Только для математической оптимизации
 √ Обеспечение равновесия в нелинейных уравнениях.
 • Простой расчет интегральных значений
 • Не имеет никакого значения
 • Обеспечение распространения данных
 
217. В какой области чаще всего применяется алгоритм градиента?
 
 • Дизайн веб-страниц
 √ Машинное обучение и оптимизация.
 • Создание протоколов безопасности
 • Автоматическое управление базами данных
 • Строительство сетевой инфраструктуры
 
218. Каковы области применения функционального анализа?

• Социальные науки
 √ Математика и экономика.
 • Химический анализ
 • История
 • Биология
 
219. Какой результат достигается при применении эффекта сжатия?
 
 • Появление нефиксированной точки
 √ Нахождение фиксированной точки.
 • Немедленное нахождение максимального решения
 • Увеличение выпуклой функции
 • Минимизация затрат
 
220. Какой метод наиболее часто используется в нелинейной оптимизации?
 
 • Графический анализ
 √ Метод градиентного спуска.
 • Метод максимального правдоподобия
 • Статические аналитические методы
 • Численное интегрирование
 
221. Какой метод используется для повышения сходимости итерационного процесса?
 
 • Увеличение скорости вычислений
 √ Коэффициент релаксации.
 • Изменение фиксированной точки
 • Изменение нормы
 • Просто увеличение количества итераций
 
222. Почему взвешенная максимальная норма важна при выборе нормы?
 
 • Для увеличения псевдосжатия
 √ Для увеличения эффекта сжатия.
 • Для решения дифференциальных уравнений
 • Для оптимизации нелинейных уравнений
 • Для расширения геометрического анализа
 
223. Каково значение выпуклой функции в оптимизации?
 
 • Нахождение максимального решения
 √ Обеспечение глобальной минимизации.
 • Применение двойного интегрирования
 • Нахождение фиксированной точки
 • Увеличение функции F
 
224. Какие условия необходимы для ограниченной оптимизации?
 
 • Множество X должно быть пустым
 √ Множество X должно быть замкнутым и выпуклым.
 • Множество X должно быть только математическим
 • Множество X должно быть открытым
 • Множество X должно быть невыпуклым
 
225. Что означает изменение эффекта сжатия в зависимости от нормы?
 
 • Эффект сжатия одинаков во всех нормах
 √ В разных нормах может быть или не быть сжатие.
 • Изменение нормы не влияет на сжатие

• Псевдосжатие происходит в соответствии с нормой
 • Сжатие возможно только в одной норме
 
226. К какому уравнению относится задача минимизации функции затрат?
 
 • v'F(x) > 0
 √ v'F(x) = 0.
 • v'F(x) = 1
 • v'F(x) ≠ 0
 • v'F(x) < 0
 
227. В какой области в основном используется итерация псевдосжатия?
 
 • Для увеличения эффекта сжатия
 √ Для решения нелинейных уравнений.
 • Для анализа данных
 • Для экономического моделирования
 • Для различных методов оптимизации
 
228. Когда используется вариационное неравенство?
 
 • Только в инженерном дизайне
 √ В исследованиях равновесия теории игр.
 • Для решения дифференциальных уравнений
 • Для статистического анализа
 • Только в линейном программировании
 
229. Что включает в себя неограниченная оптимизация?
 
 • Поиск максимального значения
 √ Минимизация функции затрат.
 • Решение нелинейных уравнений
 • Поиск глобального максимума
 • Увеличение функции F(x)
 
230. Что означает фиксированная точка в процессе итерации?
 
 • Точка, в которой нет изменений
 √ Точка, удовлетворяющая условию T(x*) = x*.
 • Точка, где T(x*) < x*
 • Точка T(x*) = 2x*
 • Точка, где T(x*) > x*
 
231. Каково основное отличие итерации псевдосжатия от итерации сжатия?
 
 • Псевдосжатие не приближается к фиксированной точке
 √ Псевдосжатие имеет более слабые условия.
 • Псевдосжатие всегда обеспечивает быструю сходимость
 • Модуль сжатия больше
 • Сжатие работает только для линейных уравнений
 
232. Какое преимущество асинхронной маршрутизации в сетях передачи данных?
 
 • Использует больше ресурсов, чем синхронные соединения
 √ Обеспечивает более быструю связь.
 • Использует меньше мощности процессора
 • Просто управляет временем
 • Требует центрального управления
 
233. Что оптимизирует алгоритм градиентного спуска?

• Увеличение времени загрузки
 √ Минимизация функции потерь.
 • Обеспечение безопасности данных
 • Снижение времени синхронизации
 • Выбор точек связи в сети
 
234. Какой алгоритм чаще всего используется для балансировки нагрузки?
 
 • Линейная регрессия
 √ Round-robin.
 • Поиск в ширину
 • Алгоритм Дейкстры
 • Поиск в глубину
 
235. Как организована синхронная работа в модели с несколькими процессорами?
 
 • Процессоры работают только последовательно
 • Все процессоры работают параллельно
 √ Все процессоры начинают работу одновременно, и результаты обновляются.
 • Процессоры всегда работают независимо
 • Только один процессор выводит результат
 
236. Для чего используется распределенная асинхронная маршрутизация в сетях?
 
 • Тесная связь между сетевыми устройствами.
 √ Независимое управление ресурсами
 • Одновременная маршрутизация данных.
 • Обеспечение центральной точки управления.
 • Только для синхронной маршрутизации.
 
237. Какая основная особенность алгоритма стохастического градиентного спуска?
 
 • Более быстрые вычисления на больших данных.
 √ Использование только части данных
 • Обработка всех данных одновременно.
 • Выполнение синхронно.
 • Работа только с большими данными.
 
238. В какой области широко используется алгоритм градиентного спуска?
 
 • Хранение данных
 • Создание сетей
 • Сетевая безопасность
 √ Машинное обучение.
 • Вычислительные сети
 
239. Какова цель балансировки нагрузки в компьютерных сетях?
 
 √ Равномерное распределение нагрузки между сетевыми устройствами.
 • Только правильная передача данных
 • Укрепление мер безопасности
 • Частая передача данных
 • Оптимизация сетевого оборудования
 
240. К какому интервалу относится параметр "a" в эффекте сжатия?
 
 • (-2, -1)
 • (-1, 0)
 • (1, 2)

√ (0, 1).
 • (2, 3)
 
241. Каково основное определение итерации сжатия?
 
 • Только для решения линейных задач
 • Итерация, не приближающаяся к множеству
 • Уменьшение переменных на каждой итерации
 • Отсутствие приближения
 √ Итерация, приближающаяся к фиксированной точке.
 
242. В каких случаях итеративные методы эффективны?
 
 • При вычислении математических рядов
 • В анализе круговых матриц
 • Только для линейных уравнений
 • В простых интегральных задачах
 √ При решении нелинейных задач.  .
 
243. Какое основное утверждение используется в ограниченной оптимизации?
 
 • Ортогональная проекция не требуется
 • Минимизация возможна только при изменении нормы
 • Когда множество X открыто
 • Максимальное решение только в уравнениях
 √ Минимизация возможна, если множество X замкнуто и выпукло.
 
244. Для чего используется ортогональная проекция?
 
 • Для расширения множества
 • Нелинейный анализ
 • Применение максимальной нормы
 √ Для поиска ближайшей точки в множестве X.
 • Только для линейного программирования
 
245. В каком случае итерация сжатия является непрерывной?
 
 √ Когда модуль находится в интервале (0, 1).
 • В отсутствии проекции
 • В разных множествах
 • Когда нет фиксированной точки
 • Только в одном уравнении
 
246. Какова основная особенность асинхронной сети процессоров?
 
 • Все процессоры работают одновременно
 √ Каждый процессор работает независимо.
 • Между процессами должна быть регулярная связь
 • Работает только центральное управление
 • Сеть работает только синхронно
 
247. Для каких вычислений используются распределённые алгоритмы?
 
 • Управление малыми данными
 √ Обработка больших данных.
 • Синхронно работающие системы
 • Повторяющиеся операции
 • Однопроцессорные системы
 
248. Как осуществляется завершение распределённых алгоритмов в асинхронных системах?

• Все процессы завершаются одновременно
 √ С помощью центрального управления.
 • Процессоры начинают работать одновременно
 • Все ресурсы управляются независимо
 • С помощью глобальной сортировки
 
249. Когда обнаруживается завершение распределённого алгоритма?
 
 • Когда завершён только один процесс
 √ Когда состояние системы завершено.
 • Когда ресурсы распределены
 • Когда определено начало процессов
 • Когда данные синхронизированы
 
250. Какой метод позволяет получить мгновенное изображение в распределённой системе?
 
 • Сортировка процессов.
 √ Алгоритм Чанди-Лампорта
 • Обнаружение взаимных блокировок.
 • Синхронизация с нулевым временем.
 • Распределение ресурсов.
 
251. На каких двух основных предположениях основывается алгоритм Беллмана-Форда?
 
 • Отсутствие циклов и связь графа
 √ Связность и предположение о положительном цикле.
 • Отрицательные циклы и отсутствие связи
 • Ненаправленный граф и одна итерация
 • Бесконечные циклы и параллельная обработка
 
252. Какова сложность метода Дейкстры?
 
 • O(n^2)
 √ O(IAI + n log n).
 • O(log n)
 • O(nm)
 • O(n^3)
 
253. Когда завершится алгоритм Беллмана-Форда?
 
 • При бесконечных итерациях
 √ Когда расстояния для всех узлов стабилизируются.
 • Когда найден отрицательный цикл
 • При отсутствии данных
 • При достижении целевой точки
 
254. Чем определяется каждый направление (i, j)?
 
 • Вектором aij
 √ Скаляром aij.
 • Матрицей mij
 • Значением направления
 • Графом qij
 
255. Какой узел считается специальным узлом?
 
 • Начальная точка цикла
 • Последний узел
 • Средний узел

√ Узел 1.
 • Узел с отрицательным циклом
 
256. Что означает предположение о положительном цикле?
 
 • Длина циклов отрицательна
 √ Длины циклов положительны.
 • Циклы разъединены
 • Циклы имеют обратное направление
 • Длина циклов равна нулю
 
257. В каких условиях алгоритм Дейкстры работает лучше всего?
 
 • При наличии отрицательных циклов
 √ При ненегативных длинах направлений.
 • В динамических графах
 • В неупорядоченных графах
 • В бесконечных циклах
 
258. Для решения какой задачи используется алгоритм Беллмана-Форда?
 
 • Вычисление максимального цикла
 √ Нахождение самого короткого пути.
 • Нахождение циклов
 • Завершение графа
 • Оптимизация отрицательных направлений
 
259. Через сколько итераций завершится алгоритм Беллмана-Форда?
 
 • С бесконечными итерациями
 √ После конечного k итераций.
 • Требуется только одна итерация
 • В неопределенной итерации
 • Меняется на каждой итерации
 
260. Какое основное утверждение используется в ограниченной оптимизации?
 
 • Когда множество X открыто
 √ Минимизация возможна, если множество X замкнуто и выпукло.
 • Минимизация возможна только при изменении нормы
 • Ортогональная проекция не требуется
 • Максимальные решения только в уравнениях
 
261. Какова цель использования ортогональной проекции?
 
 • Расширение множества
 √ Нахождение ближайшей точки в множестве X.
 • Нелинейный анализ
 • Применение максимальной нормы
 • Только линейное программирование
 
262. Когда применяется метод "snapshot" в распределённых системах?
 
 • Для проверки потери данных
 • Для параллельной обработки задач
 • Для сортировки процессов
 √ Для регистрации состояния алгоритма.
 • Для определения распределения ресурсов
 
263. Какой метод обеспечивает равномерное распределение нагрузок в системе?

• Оптимизация ресурсов
 √ Балансировка нагрузки.
 • Сортировка процессов
 • Сжатие данных
 • Синхронизация
 
264. Для каких систем важна планировка ресурсов в распределенных алгоритмах?
 
 • Для одноядерных систем
 √ Для систем реального времени.
 • Для систем с центральным управлением
 • Для неэффективных сетей
 • Для стандартных операционных систем
 
265. Какое преимущество имеют асинхронные сети в распределенных системах?
 
 • Работа только одного процессора.
 √ Высокая гибкость
 • Медленная передача данных.
 • Правильное распределение ресурсов.
 • Необходимость синхронизации.
 
266. Какова цель управления ресурсами в распределенных системах?
 
 • Ускорение передачи сообщений
 • Неэффективное управление
 √ Равномерное распределение ресурсов.
 • Обнаружение ошибок
 • Независимое управление ресурсами каждым процессом
 
267. Какой метод нельзя использовать для обнаружения завершения алгоритмов в распределенных системах?
 
 • Мгновенные снимки
 √ Динамическое планирование.
 • Обнаружение взаимных блокировок
 • Сортировка процессов
 • Координирующий узел
 
268. Когда важна распределенная планировка ресурсов?
 
 • Когда процессор останавливается
 √ При выполнении распределенных алгоритмов.
 • Когда работает только один узел
 • В центральной системе управления
 • При применении синхронных алгоритмов
 
269. Для чего используется алгоритм Chandy-Lamport Snapshot?
 
 • Для обнаружения ошибок
 √ Для получения мгновенного снимка.
 • Для анализа сообщений
 • Для оптимизации ресурсов
 • Для упорядочивания процессов
 
270. Как работа каждого процессора продвигается в асинхронной процессорной сети?
 
 • Синхронно.
 √ Независимо
 • Только при связи с другими процессорами.

• Все процессоры работают одновременно.
 • С централизованным управлением.
 
271. Какой метод используется для определения завершения распределенного алгоритма?
 
 • Алгоритмы сортировки
 • Методы поиска
 • Алгоритмы повторений
 • Корректная координация
 √ Мгновенные снимки.
 
272. Когда сжатие итерации является непрерывным?
 
 • Когда нет фиксированной точки
 √ Когда модуль находится в интервале (0,1).
 • В различных множествах
 • При отсутствии проекции
 • Только в одном уравнении
 
273. Какова основная особенность ограниченной оптимизации?
 
 • Нахождение различных максимальных значений
 √ Минимизация затрат в заданном множестве.
 • Применение максимальной нормы
 • Приближение к любой точке
 • Расширение множества
 
274. К какой точке стремятся итерационные методы?
 
 • К максимальной точке
 √ К фиксированной точке.
 • К множеству общих решений
 • Только к глобальной точке
 • К минимальной точке
 
275. Какова основная область применения вариационного неравенства?
 
 • Генетические анализы
 √ Теория игр и исследование равновесия.
 • Дифференциальные уравнения
 • Биологическое моделирование
 • Социальные науки
 
276. Какая норма наиболее часто используется в неограниченной оптимизации?
 
 • Общая стандартная норма
 √ Взвешенная максимальная норма.
 • Ограниченная норма
 • Двойная норма
 • Линейная норма
 
277. В каких случаях применяются методы нелинейной оптимизации?
 
 • Только для линейных уравнений
 √ Для систем различных уравнений.
 • При поиске фиксированных точек
 • Для максимальных решений
 • В симметричных функциях
 
278. Какое основное преимущество псевдосжатия?

• Более быстрые результаты
 • Работа с анализом данных
 • Применения нелинейной оптимизации
 √ Работа при слабых условиях.
 • Нахождение максимальной точки
 
279. Каково значение нормы в итеративных методах?
 
 • Проекция данных
 • Увеличение количества итераций
 • Ограниченная оптимизация
 √ Определение эффекта сжатия.
 • Разные выпуклые функции
 
280. Что указывает условие F(x) = 0?
 
 • Невыпуклые функции
 • Глобальный максимум
 • Максимальные решения
 √ Минимизацию функции затрат.
 • Интерактивные методы решения
 
281. Что представляет собой ортогональная проекция на множество "X"?
 
 • Не проекция данных
 • Установление вариационных неравенств
 • Поиск максимальных значений
 √ Нахождение ближайшей точки по евклидовой норме.
 • Удаление от проекционных точек
 
282. В каких случаях алгоритм Беллмана-Форда производит итерации?
 
 • Когда достигнута целевая точка
 √ Пока расстояния для всех вершин не станут неизменными.
 • При наличии бесконечных циклов
 • Когда процессор загружен
 • Когда найден отрицательный цикл
 
283. Как находится длина самого короткого пути?
 
 • Максимальным расстоянием
 √ Суммой длин направлений.
 • Количеством вершин
 • Скалярным множителем
 • Количеством циклов
 
284. Для каких графов алгоритм Флойда-Уоршелла более подходит?
 
 • Для разреженных графов.
 √ Для плотных графов
 • Для графов с бесконечными циклами.
 • Для графов с отрицательными направлениями.
 • Для графов с ненегативными длинами направлений.
 
285. Что обеспечивает предположение о связности графа?
 
 • Снижение количества циклов
 √ Наличие пути от каждой вершины до целевой точки.
 • Нахождение отрицательных циклов

• Соединение процессоров
 • Отсутствие связи между вершинами
 
286. С какими типами процессоров работает алгоритм Беллмана-Форда?
 
 • С одноядерными процессорами
 √ С параллельными процессорами.
 • С аналоговыми процессорами
 • С матричными процессорами
 • С циклическими процессорами
 
287. От чего зависит количество итераций для решения уравнения Беллмана?
 
 • От размера графа
 √ От пути, содержащего наименьшее количество направлений.
 • От количества процессоров
 • От количества динамических процессоров
 • От количества циклов
 
288. Какое преимущество алгоритма Беллмана-Форда?
 
 • Возможность вычислять максимальные циклы
 √ Возможность решать задачи с отрицательными длинами направлений.
 • Последовательная проверка вершин
 • Приведение циклов к бесконечности
 • Работа с бесконечными итерациями
 
289. Для каких графов метод Дейкстры не подходит?
 
 • Для графов с ненегативными длинами направлений
 √ Для графов с отрицательными длинами направлений.
 • Для динамических графов
 • Для параллельно работающих графов
 • Для графов без циклов
 
290. Как работает алгоритм Беллмана-Форда для графа с отрицательными циклами?
 
 • Находя отрицательный цикл
 √ Убирая положительные циклы.
 • Не давая никакого решения
 • Решая параллельно
 • Решая отрицательные циклы двойной итерацией
 
291. В каких графах алгоритм Беллмана-Форда работает быстрее?
 
 • В плотных графах
 √ В разреженных графах.
 • В параллельных графах
 • В динамических графах
 • В графах без циклов
 
292. Сколько итераций нужно для решения уравнения Беллмана?
 
 • Одна итерация
 √ m+1 итераций.
 • Параллельная итерация
 • Итерация без циклов
 • Бесконечная итерация
 
293. Какой алгоритм более подходит для разреженных графов?

• Алгоритм Флойда-Уоршелла
 √ Алгоритм Беллмана-Форда.
 • Параллельные алгоритмы
 • Методы с замкнутыми циклами
 • Матрицы методов
 
294. С какой сложностью работает алгоритм Флойда-Уоршелла?
 
 • O(n^2)
 √ O(n^3).
 • O(nm)
 • O(IAI + n log n)
 • O(log n)
 
295. Какой алгоритм можно использовать для графа с отрицательными длинами направлений?
 
 • Метод Дейкстры
 √ Алгоритм Беллмана-Форда.
 • Алгоритм Флойда-Уоршелла
 • Параллельный метод
 • Метод бесконечных циклов
 
296. Что находится при решении уравнения Беллмана?
 
 • Параллельные точки соединения
 • Отрицательные направления
 √ Самые короткие расстояния.
 • Циклы без циклов
 • Самые длинные расстояния
 
297. В каких системах алгоритм Беллмана-Форда более эффективен?
 
 • В аналоговых системах
 • В линейных системах
 • В одноядерных системах
 • В замкнутых системах
 √ В распределенных системах.
 
298. Какой алгоритм решает задачу о самом коротком пути для всех пар?
 
 • Динамическое программирование
 • Теория графов
 • Алгоритм Беллмана-Форда
 • Алгоритм Дейкстры
 √ Алгоритм Флойда-Уоршелла.
 
299. Как определяется самый короткий путь?
 
 • Разностью направлений
 • Количеством циклов
 • Количеством вершин
 √ Суммой длин путей.
 • Максимальным расстоянием
 
300. Что происходит согласно предположению связности?
 
 • Все вершины не связаны
 • Процессор заполнен
 • Увеличивается количество путей

√ Для каждой вершины существует путь к целевой точке.
 • Возникает цикл между вершинами
 
301. Как найти минимальную длину от одного узла к другому?
 
 • Разностью между узлами
 • Количеством циклов
 • Максимальным расстоянием
 • Средней длиной
 √ Суммой длин направлений.
 
302. Как называется матрица переходов в цепях Маркова?
 
 • Матрица итераций
 • Модельная матрица
 • Динамическая матрица
 • Матрица программирования
 √ Матрица вероятностей переходов.
 
303. Какая из следующих областей не относится к применению цепей Маркова?
 
 • Физические эксперименты.
 • Сетевая безопасность.
 • Биологические системы.
 √ Экономический анализ
 • Математическое моделирование.
 
304. Какова основная цель динамического программирования?
 
 • Преобразовывать процессы в линейную модель
 • Регулировать процессы по хронологической последовательности
 • Принимать решения, не зависящие от прошлого
 √ Решать процессы методом повторений.
 • Вычислять все этапы одновременно
 
305. Что выражает "состояние" в цепи Маркова?
 
 • Стабильность вероятностей
 • Совокупность предыдущих фаз
 √ Текущую фазу процесса.
 • Начальную точку процесса
 • Процесс принятия решения
 
306. Когда цепь Маркова считается стационарной?
 
 • Когда нет переходов между двумя состояниями
 • Когда процесс завершен
 • Когда все переходы системы имеют одинаковые затраты
 • Когда начальное состояние остается стабильным
 √ Когда вероятности переходов не меняются с течением времени.
 
307. В какой области переходные затраты применяются чаще всего?
 
 • В компьютерной графике
 • В оптимизации случайных процессов
 • В математическом анализе
 √ В оптимальных системах управления.
 • В проектировании алгоритмов
 
308. Какой метод используется для решения в цепи Маркова?

• Метод Монте-Карло.
 • Топологический анализ.
 • Фурье-анализ.
 √ Динамическое программирование
 • Нейронные сети.
 
309. Что выражает вероятность перехода?
 
 • Вероятность начала процесса
 • Вероятность завершения процесса
 • Вероятность того, что система будет стабильной
 • Вероятность возврата в прошлое
 √ Вероятность перехода от одного состояния к другому.
 
310. Какова основная характеристика цепи Маркова?
 
 • Статистические ошибки
 • Постоянные затраты перехода
 • Зависимость будущего от прошлого
 • Детерминированность
 √ Отсутствие влияния прошлого на будущее.
 
311. Для чего используется DAG (ориентированный ациклический граф)?
 
 • Для проверки сетевого соединения на компьютерах
 • Для выполнения вычислений на графиках
 √ Для отображения последовательности операций параллельных алгоритмов и зависимостей данных.
 • Используется для измерения мощности процессоров
 • Используется только в задачах обработки изображений
 
312. Что такое синхронная работа в параллельных компьютерах?
 
 • Работы всех процессоров без связи друг с другом
 • Синхронизация используется только для замедления передачи данных
 • Просто случайное распределение данных
 • Выполнение каждым процессором различных операций в разное время
 √ Одновременная работа процессоров с общими глобальными тактовыми импульсами.
 
313. В чем разница между SIMD и MIMD?
 
 • SIMD используется только в приложениях искусственного интеллекта
 • MIMD не выполняет никаких инструкций одновременно
 • SIMD работает только с одноядерными процессорами, а MIMD всегда с двумя процессорами
 • MIMD всегда медленнее SIMD
 √ SIMD управляет множеством данных одной инструкцией, а MIMD управляет различными инструкциями одновременно.
 
314. Как классифицируются параллельные вычислительные системы?
 
 √ На основе типа и количества процессоров, глобального механизма управления и синхронной/асинхронной работы.
 • Только по скорости процессоров
 • По использованному программному обеспечению
 • Только по размеру компьютеров
 • По скорости передачи данных
 
315. Каковы основные причины необходимости параллельных и распределенных вычислений?
 
 • Увеличить скорость работы только одноядерных процессоров
 • Ускорить разработку программного обеспечения только
 • Постоянно повторять одни и те же операции

√ Сократить время, необходимое для решения больших объемов численных вычислений.
 • Решать задачи, связанные только с обработкой изображений
 
316. Как работает алгоритм Беллмана-Форда для графов с отрицательными длинами направлений?
 
 • Создавая бесконечные циклы
 • Вычисляя отрицательные циклы
 • Меняя направление графа
 • Решая параллельной итерацией
 √ Убирая положительные циклы.
 
317. Для каких графов алгоритм Беллмана-Форда более эффективен?
 
 • Для плотных графов
 • Для графов с отрицательными циклами
 √ Для разреженных графов.
 • Для аналоговых графов
 • Для параллельных графов
 
318. Какой алгоритм используется для нахождения самого короткого пути от каждой вершины к каждой другой?
 
 • Динамическое программирование
 • Алгоритм для неориентированного графа
 • Алгоритм Беллмана-Форда
 • Алгоритм Дейкстры
 √ Алгоритм Флойда-Уоршелла.
 
319. В каких случаях алгоритм Беллмана-Форда может работать и с отрицательными направлениями?
 
 • Когда есть пути без циклов
 • Когда есть отрицательный цикл
 • Когда все направления отрицательные
 √ Когда нет положительных циклов.
 • Когда граф неориентированный
 
320. Для каких типов графов метод Дейкстры не подходит?
 
 • Для параллельных графов
 • Для динамических графов
 • Для графов с ненегативными длинами направлений
 • Для графов без циклов
 √ Для графов с отрицательными длинами направлений.
 
321. Когда алгоритм Флойда-Уоршелла становится более эффективным?
 
 • Когда есть отрицательные циклы.
 • Для разреженных графов.
 • Когда есть ненегативные направления.
 • Когда целевая точка известна.
 √ Для плотных графов
 
322. Что означает баланс потока?
 
 • Увеличение количества узлов
 • Возникновение затора в сети
 • Неравномерное распределение затрат
 • Отсутствие потока через узлы
 √ Равенство входящего и исходящего потока в каждом узле.
 
323. Что выражает концепция двойственности?

• Расширение путей сети
 √ Альтернативное решение исходной задачи.
 • Увеличение потока
 • Уменьшение количества узлов
 • Диаграмма сети
 
324. Какая математическая модель используется для задачи сетевой передачи?
 
 • Комбинаторная оптимизация
 • Квадратичное программирование
 • Динамическое программирование
 √ Линейное программирование.
 • Эвристический метод
 
325. Какой метод используется для оптимального распределения ресурсов в сети?
 
 • Метод ограничения потока.
 √ Метод ослабления
 • Метод приблизительных решений.
 • Метод сетевого разрушения.
 • Метод ограничений.
 
326. Какова цель максимизации потока в сети?
 
 • Задача минимального потока
 √ Задача максимального потока.
 • Проблема высоких затрат
 • Проблема заторов
 • Проблема альтернативных сетей
 
327. Какие функции выполняют стрелки в сети?
 
 • Не соединяют узлы
 • Увеличивают затраты
 √ Создают поток между узлами.
 • Останавливают поток
 • Уничтожают узлы
 
328. Что представляют собой узлы в сети?
 
 • Ограничения
 √ Точки сети.
 • Источник
 • Пути сети
 • Элементы, соединяющие сеть
 
329. Какова цель задачи линейной сетевой передачи?
 
 • Уменьшение количества узлов
 • Разрушение сети
 • Ограничение путей
 • Увеличение числа пользователей
 √ Максимизация потока или минимизация затрат.
 
330. Что пытается решить проблема сетевой передачи?
 
 • Создание заторов в сети
 • Закрытие сети
 • Расширение сети

• Добавление новых узлов
 √ Оптимальное распределение ресурсов.
 
331. Что такое сетевая передача?
 
 • Увеличение количества узлов.
 • Составление сетевых диаграмм.
 • Удаление путей из сети.
 √ Движение ресурсов по сети
 • Увеличение затрат.
 
332. Какие преимущества имеют алгоритмы параллельной итерации?
 
 • Более высокая точность
 √ Уменьшение времени вычислений.
 • Минимизация затрат
 • Оптимизация статичных процессов
 • Увеличение вероятности переходов
 
333. Какой фактор влияет на расчет переходных затрат?
 
 • Независимость модели
 • Динамические параметры
 √ Стоимость перехода для каждого состояния.
 • Данные прошлого
 • Постоянные вероятности
 
334. В каком случае процессы Маркова становятся неэффективными?
 
 • Когда затраты не являются динамичными.
 √ Когда вероятности переходов равны нулю
 • Когда количество состояний увеличивается.
 • Когда применяются статичные модели.
 • Когда параллельная итерация не создана.
 
335. Какой шаг является основным в итеративном динамическом программировании?
 
 • Стабильность начального состояния
 √ Повторение от будущего к прошлому.
 • Вычисление от начальной точки процесса
 • Создание параллельных линий
 • Постоянство затрат
 
336. Как называется стационарное распределение в цепи Маркова?
 
 • Постоянная вероятность
 √ Стационарное распределение.
 • Детерминированная цепь
 • Статический результат
 • Параллельная модель
 
337. Какой алгоритм используется для оптимизации переходных затрат?
 
 • Алгоритм Прима
 √ Алгоритм Беллмана-Форда.
 • Кодирование Хаффмана
 • Гауссова элиминация
 • Алгоритм Крускала
 
338. В каких системах параллельная итерация более эффективна?

• В малых и стабильных системах.
 √ В больших системах
 • В детерминированных моделях.
 • В статичных вероятностях.
 • В простых матрицах переходов.
 
339. Каковы основные этапы итерации динамического программирования?
 
 • Переход, анализ и результат
 √ Анализ, решение и результат.
 • Вероятности, стабильность и вычисления
 • Повторение, модель и переход
 • Планирование, повторение и оптимизация
 
340. Для чего используется уравнение Беллмана?
 
 • Для вычисления вероятностей переходов
 √ Для нахождения оптимальной политики.
 • Для создания параллельной итерации
 • Для сохранения динамики состояний
 • Для анализа статичных процессов
 
341. Какова сумма вероятностей переходов в процессе Маркова?
 
 • 0.
 √ 1
 • Постоянное число.
 • Случайное число.
 • Количество состояний.
 
342. Какова природа цепей Маркова?
 
 • Детерминированная и стабильная
 √ Случайная и недетерминированная.
 • Недетерминированная и стабильная
 • Стабильная и независимая
 • Статичная и неопределенная
 
343. Что представляют собой переходные затраты?
 
 • Стоимость постоянных вероятностей
 √ Стоимость перехода от одного состояния к другому.
 • Структура динамических моделей
 • Затраты на параллельную итерацию
 • Множество состояний
 
344. Как работает итеративный метод?
 
 • Процесс вычисляется заранее полностью.
 √ Решения повторяются поэтапно
 • Используются постоянные вероятности.
 • Сравнивается с статичными методами.
 • Изменяются данные прошлого.
 
345. Какой принцип используется в динамическом программировании?
 
 • Оптимальная подструктура.
 √ Разделяй и властвуй
 • Устранение влияния прошлого.

• Оптимизация процессов.
 • Упрощение и повторение.
 
346. Какой параметр играет основную роль в цепи Маркова?
 
 • Таблица затрат
 √ Вероятности переходов.
 • Функциональные модели
 • Начальное состояние
 • Постоянные переменные
 
347. Как называется модель принятия решений в процессе Маркова?
 
 • Системы переходов
 √ Модели принятия решений Маркова (MDP).
 • Модели оптимального управления
 • Детерминированные процессы
 • Параллельные цепи
 
348. Что выражает матрица вероятностей переходов?
 
 • Степень стабильности систем
 √ Вероятности переходов между состояниями.
 • Оптимальные точки решений
 • Результаты параллельных процессов
 • Влияние прошлого на будущее
 
349. Какой алгоритм используется в процессах Маркова?
 
 • Алгоритм Дейкстры
 √ Алгоритм Беллмана.
 • Алгоритм Хаффмана
 • Машина Тьюринга
 • Алгоритм Ньютона
 
350. В каком случае можно применить динамическое программирование?
 
 • Для одношаговых процессов
 √ Для многоконтурных процессов.
 • Для детерминированных систем
 • Для статичных вероятностей
 • Для стабильных систем
 
351. Для чего используется параллельная итерация?
 
 • Для увеличения вероятности переходов.
 √ Для уменьшения времени вычислений
 • Для проверки стабильности систем.
 • Для создания повторяющихся процессов.
 • Для оптимизации путем снижения затрат.
 
352. Каково преимущество итеративного метода динамического программирования?
 
 • Минимальное использование памяти.
 √ Быстрое нахождение решения
 • Сохранение постоянных вероятностей.
 • Повышение точности модели.
 • Применение простых алгоритмов.
 
353. В каких областях используется электронный метод релаксации?

• Простые линейные уравнения
 √ Математическая оптимизация.
 • Поиск правильных решений
 • Анализ линейных уравнений
 • Производные различных функций
 
354. Какой принцип работы итерации в методе релаксации?
 
 • Изменение начальной точки
 √ Повторение и приближение.
 • Объединение нелинейных функций
 • Сортировка данных
 • Упрощение уравнений
 
355. Какие типы задач решает электронный метод релаксации?
 
 • Линейные задачи.
 √ Нелинейные задачи
 • Задачи интеграции.
 • Уравнения с известной правильностью.
 • Простые задачи оптимизации.
 
356. Какой основной подход используется в электронном методе релаксации?
 
 √ Итеративный подход.
 • Поиск оптимальных решений
 • Линейные уравнения
 • Аналитические решения
 • Дифференциальные уравнения
 
357. Какая основная цель электронного метода релаксации?
 
 • Найти точку максимума функции
 √ Найти точку минимума функции.
 • Найти значения интегралов
 • Найти аналитическое решение уравнений
 • Решить нелинейные неравенства
 
358. Какие параметры измеряют задачу минимальных затрат?
 
 • Количество узлов.
 √ Поток и затраты
 • Ограничения по требованиям.
 • Остановка потока.
 • Ширина сети.
 
359. Какими методами решается двойная задача?
 
 • Квадратичным программированием
 √ Методами линейного программирования.
 • Эвристическим подходом
 • Графическим анализом
 • Симуляцией
 
360. Чем ограничено количество итераций в электронном методе релаксации?
 
 • Количеством ресурсов.
 √ Размером сети
 • Отсутствием ограничений.

• Нарушением графа.
 • Шириной узлов.
 
361. Каковы основные шаги метода релаксации?
 
 • Нарушение сети
 √ Начальное решение, итерация, результат.
 • Укорочение путей
 • Ограничение требований
 • Остановка потока
 
362. В каких областях используется проблема потока в сети?
 
 • Спортивное планирование.
 √ Логистика и транспорт
 • Работы по восстановлению.
 • Уничтожение природных ресурсов.
 • Образовательные программы.
 
363. Итерации электронного метода релаксации регулируют что?
 
 • Ширину путей
 √ Объем потока.
 • Количество узлов
 • Увеличение затрат
 • Источники точек
 
364. Какие компоненты сети несут поток?
 
 • Узлы.
 √ Стрелки
 • Источники запросов.
 • Ограничения.
 • Сетевые линии.
 
365. Как выбирается начальное решение в методе релаксации?
 
 • Обязательно
 √ Приблизительно.
 • Поток останавливается
 • Увеличением ограничения
 • Графически
 
366. С какой проблемой связан объем потока?
 
 • Проблема баланса затрат
 √ Проблема максимального потока.
 • Проблема увеличения путей
 • Проблема альтернативной сети
 • Проблема ограничения узлов
 
367. К решению какой задачи относится задача решения двойственной задачи?
 
 • Нарушению сети
 √ Оптимальному решению начальной задачи.
 • Увеличение путей
 • Возникновению пробок
 • Несбалансированному потоку
 
368. Какова основная цель метода электронного ослабления?

• Увеличение узлов
 √ Балансировка потока.
 • Увеличение ограничений
 • Уничтожение ресурсов
 • Сужение путей
 
369. Какова основная цель метода электронного ослабления?
 
 • Увеличение узлов
 √ Балансировка потока.
 • Увеличение ограничений
 • Уничтожение ресурсов
 • Сужение путей
 
370. Каково основное преимущество метода ослабления?
 
 • Закрытие сети
 √ Эффективное решение больших проблем.
 • Увеличение ресурсов
 • Удаление сетевых диаграмм
 • Остановка потока
 
371. Какая задача стремится минимизировать стоимость потока?
 
 • Задача сетевого графа
 • Задача максимального потока
 • Проблема альтернативной оптимизации
 • Проблема заторов
 √ Задача минимальной стоимости.
 
372. Какой один из основных компонентов задачи сетевой передачи?
 
 • Ограничения
 √ Узлы.
 • Результаты
 • Спрос
 • Отчеты
 
373. Какие задачи решает алгоритм Форда-Фалкерсона?
 
 • Кратчайший путь
 • Максимальное расстояние
 • Линейные целевые функции
 √ Максимальный поток.
 • Нелинейные сети
 
374. Для чего используется метод сопряженных градиентов?
 
 • Для решения линейных задач.
 √ Для решения нелинейных задач
 • Для установления связей между входом и выходом.
 • Для работы повторяющихся алгоритмов.
 • Для принятия оптимальных решений.
 
375. Для каких типов задач эффективен метод сопряженных градиентов?
 
 • Линейное программирование
 √ Нелинейная оптимизация.
 • Детерминированные задачи

• Случайные задачи
 • Стационарные задачи
 
376. Какова цель метода сопряженных градиентов?
 
 • Решение только линейных задач
 √ Оптимизация на одном конкретном уровне.
 • Нахождение только стабильных значений на каждой итерации
 • Применение упрощенных моделей
 • Проверка стабильности системы
 
377. Какой метод используется для решения нелинейных задач?
 
 • Графический анализ
 √ Методы итерации.
 • Смешанное программирование
 • Аналоговые методы
 • Методы проверки
 
378. Какое преимущество метода итерации в нелинейных задачах?
 
 • Создание значительных различий между переходами.
 √ Более быстрое нахождение решения
 • Нахождение только оптимального решения.
 • Случайность процессов.
 • Получение стабильного результата.
 
379. На каком основном этапе применяется метод сопряженных градиентов?
 
 • Нахождение стабильного параметра.
 √ Итерация и оптимизация
 • Только вычисление переходных затрат.
 • Стабилизация конечного результата.
 • Определение нулевой точки.
 
380. Какая особенность свойственна методам итерации при решении нелинейных задач?
 
 • Множество шагов и повторений
 √ Нахождение результата за один шаг.
 • Анализ результатов
 • Нахождение только одного возможного решения
 • Неподвижность стабильных точек
 
381. На основе какого фактора выбираются методы итерации для нелинейных задач?
 
 • Использование только стабильного параметра.
 √ Структура и сложность функции
 • Минимизация переходных затрат.
 • Динамические изменения.
 • Вероятность стабильности результатов.
 
382. Какие задачи решает алгоритм Форда-Фалкерсона?
 
 • Кратчайший путь
 √ Максимальный поток.
 • Линейные целевые функции
 • Максимальное расстояние
 • Нелинейные сети
 
383. Что обеспечивает оптимизация в методе сопряженных градиентов?

• Коррекции для простых ошибок
 √ Корректное решение для нелинейных задач.
 • Оптимизация переходных вероятностей
 • Изменение параметра функции
 • Нахождение стабильного решения
 
384. К какому аспекту задачи относится наложение сокращений?
 
 • Изменение только переходных вероятностей
 √ Сближение многочисленных итераций.
 • Оценка только повторяющихся результатов
 • Параллельность выходов
 • Статичность процесса
 
385. Какой алгоритм используется в процессах Маркова?
 
 • Алгоритм Дейкстры
 √ Алгоритм Беллмана.
 • Алгоритм Хаффмана
 • Машина Тьюринга
 • Алгоритм Ньютона
 
386. Как выполняется каждая итерация в асинхронных алгоритмах?
 
 • Асинхронно с использованием задержки данных
 √ С задержками и синхронно.
 • Каждая итерация выполняется одновременно
 • Данные сбрасываются
 • Только синхронно
 
387. Какой алгоритм чаще всего используется для балансировки нагрузки?
 
 • Линейная регрессия
 √ Round-robin.
 • Поиск в ширину
 • Алгоритм Дейкстры
 • Поиск в глубину
 
388. Для чего используется алгоритм Chandy-Lamport Snapshot?
 
 • Для обнаружения ошибок
 √ Для получения снимка состояния.
 • Для анализа сообщений
 • Для оптимизации ресурсов
 • Для упорядочивания процессов
 
389. Какую задачу решает проблема максимального потока?
 
 • Проблема минимального потока
 √ Проблема максимального потока.
 • Проблема пробок
 • Проблема альтернативных сетей
 • Проблема высоких затрат
 
390. Какая основная трудность метода сопряженных градиентов?
 
 • Наличие только стабильных точек
 √ Необходимость большого числа итераций.
 • Использование только повторяющихся функций

• Неопределенность решения
 • Неизвестность переходных затрат
 
391. Какое условие должно быть выполнено для корректной работы метода итерации в нелинейных задачах?
 
 • Параметры должны быть нестационарными.
 √ Функция должна быть сходящейся
 • Должно быть применено простое линейное моделирование.
 • Должен быть применен стабильный процесс.
 • Переходные затраты должны быть высокими.
 
392. Какова цель метода мгновенного изображения (snapshot)?
 
 • Установление связи между процессами
 √ Регистрация текущего состояния системы.
 • Обеспечение балансировки нагрузки
 • Обнаружение завершения процессов
 • Обеспечение сортировки ресурсов
 
393. Что подразумевается под итерационными методами для нелинейных задач?
 
 • Получение стабильных результатов
 √ Точное анализирование переходов и результатов.
 • Изменение только параметров
 • Неопределённость решения
 • Оценка случайных результатов
 
394. Какие функции фактически используются в методе градиента на сопряжённых направлениях?
 
 • Простые линейные функции
 √ Нелинейные, выпуклые функции.
 • Стационарные и нестабильные функции
 • Специальные случайные функции
 • Неиспользуемые параметры
 
395. Когда возникает наложение сокращений?
 
 • Когда переходные вероятности неизменны.
 √ При большом числе итераций
 • Когда переходные затраты велики.
 • При использовании случайных параметров.
 • При применении стабильных моделей повторений.
 
396. Какие основные трудности встречаются при применении метода градиента на сопряжённых направлениях?
 
 • Использование только стабильных параметров
 √ Нелинейность процесса.
 • Необходимость множества итераций
 • Множество переходных вероятностей
 • Множество параметров
 
397. Какую пользу приносит масштабированная версия?
 
 • Быстрое решение простых задач
 √ Эффективное решение масштабных задач.
 • Упрощение функции
 • Легкое решение сложных задач
 • Увеличение количества итераций
 
398. Что принимается во внимание при анализе сложности?

• Увеличение количества итераций.
 √ Правильный выбор начальной точки
 • Упрощение функций.
 • Слабость вычислительных алгоритмов.
 • Аналитическое решение уравнений.
 
399. Какое преимущество имеет параллельная обработка?
 
 • Долгий поиск конечной точки
 √ Оптимизация времени вычислений.
 • Упрощение функции
 • Замедление вычислительных операций
 • Обработка только с одним ядром
 
400. Какие задачи решаются с помощью электронного метода релаксации?
 
 • Простые линейные уравнения
 √ Нелинейные задачи оптимизации.
 • Интегральные уравнения
 • Оценка простых функций
 • Простые прямые уравнения
 
401. Какой тип сходимости используется в электронном методе релаксации?
 
 • Повторение ошибок.
 √ Приближение функции
 • Только простые итерации.
 • Постоянная конечная точка.
 • Приближение к аналитическому решению.
 
402. Какие вычислительные инструменты используются для параллельной обработки?
 
 • Только одноядерные инструменты.
 √ GPU и многозадачные системы
 • Получение решения за один этап.
 • Системы с низким потреблением ресурсов.
 • Ручные вычислительные техники.
 
403. Какие основные сложности возникают при работе с множественными потоками?
 
 • Использование только одного потока
 √ Параллельная обработка и оптимизация ресурсов.
 • Упрощение уравнений
 • Сложные вычислительные алгоритмы
 • Увеличение времени вычислений
 
404. Какая технология используется в масштабированной версии электронного метода релаксации?
 
 • Только линейные алгоритмы
 √ Параллельные вычислительные технологии.
 • Аналитические решения
 • Простые методы итерации
 • Методы функционального анализа
 
405. Как повторяются уравнения в методе релаксации?
 
 • Только один раз
 √ Итеративно (с каждым приближением
 • Используются линейные уравнения

• Меняется начальная точка
 • Уравнения сразу решаются аналитически
 
406. Что обеспечивает параллельная обработка?
 
 • Ошибочные результаты
 √ Эффективное управление временем вычислений.
 • Увеличение количества итераций
 • Невозможность получения точных результатов
 • Обеспечение локального минимума
 
407. Какие вычислительные ресурсы используются в приложении электронного метода релаксации?
 
 • Только одноядерные системы
 √ Многозадачные и параллельные системы.
 • Простые алгоритмы
 • Средства функционального анализа
 • Ручные вычислительные методы
 
408. Где преимущественно используется работа с множественными потоками?
 
 • Простые линейные задачи
 √ Математическая оптимизация и машинное обучение.
 • Простые задачи анализа
 • Вычисление точности
 • Задачи интеграции и дифференциации
 
409. Какое преимущество дает параллельная реализация?
 
 • Использование только одноядерных систем.
 √ Увеличение вычислительной скорости
 • Более высокое потребление памяти.
 • Получение улучшенных результатов.
 • Снижение времени вычислений.
 
410. Какой основной параметр присутствует в приложениях, использующих множественные потоки?
 
 • Снижение скорости вычислений
 • Только увеличение количества итераций
 √ Параллельная обработка и оптимизация ресурсов.
 • Разные подходы к решению функций
 • Использование только одного потока
 
411. Какова основная цель масштабированной версии?
 
 • Упрощение нелинейных задач
 • Решение только линейных задач
 √ Более эффективное решение масштабных задач.
 • Упрощение сложных задач
 • Параллельная обработка множества потоков
 
412. На что ориентируется анализ сложности сходимости?
 
 • Невозможность нахождения минимума функции.
 • Увеличение количества итераций.
 • Повторение уравнений.
 √ Правильный выбор начальной точки
 • Изменение конечной точки.
 
413. Для чего важны итерации в применении электронного метода релаксации?

• Для увеличения времени вычислений.
 • Только для решения простых задач.
 • Для упрощения вычислительного процесса.
 √ Для повышения точности результата
 • Для уменьшения значения функции.
 
414. Какие уравнения решаются быстрее с использованием метода релаксации?
 
 • Интегральные уравнения.
 • Простые линейные уравнения.
 • Поиск оптимальных решений.
 • Дифференциальные уравнения.
 √ Нелинейные уравнения
 
415. Какой параметр в электронном методе релаксации чаще всего повторяется?
 
 • Результаты вычислений
 • Только начальная точка
 • Производные функции
 • Типы уравнений
 √ Количество итераций.
 
416. Какое преимущество дает параллельная реализация электронного метода релаксации?
 
 • Более сложные вычислительные операции.
 • Более быстрые результаты.
 • Использование простых методов повторения.
 • Добавление новых переменных в уравнения.
 √ Сокращение времени вычислений
 
417. Какие ресурсы используются в параллельных реализациях?
 
 • Методы функционального анализа
 • Ручные вычислительные инструменты
 √ Многозадачные и GPU-ориентированные системы.
 • Интегрированные системы
 • Только одноядерные системы
 
418. С чем связано масштабированное выполнение?
 
 • Медленное решение задач
 √ Более эффективное решение больших задач.
 • Неповторяемость функции
 • Решение простых задач за один шаг
 • Более длительное время сходимости
 
419. Какая из основных сложностей электронного метода релаксации?
 
 • Только одно значение решения
 • Отсутствие процесса решения уравнений
 • Множество решений
 • Слишком простая функция
 √ Риск попадания в локальный минимум.
 
420. Что выражает проблема сходимости?
 
 • Увеличение количества итераций
 • Отсутствие решений уравнений
 • Ошибочные результаты вычислений

• Выбор неправильной начальной точки
 √ Точку, в которой процесс приближения останавливается.
 
421. Каковы функции обновления в модели полностью асинхронного алгоритма?
 
 • Функция обновления не зависит от множества переменных.
 • Функции применяются последовательно.
 • Функции никогда не обновляются.
 √ Каждый компонент использует свои последние данные
 • Функция обновления применяется только в текущий момент.
 
422. Как обновляются компоненты в полностью асинхронных итеративных алгоритмах?
 
 • Всегда синхронно, одновременно.
 • Компоненты обновляются только поочередно.
 • Ожидается задержка данных со временем.
 √ Асинхронно, в разное время
 • Обновляется только один раз.
 
423. Что такое полностью асинхронный итеративный алгоритм?
 
 • Алгоритм, не имеющий задержек в данных
 • Только последовательный алгоритм
 • Применяется только для повторяющихся задач
 √ Алгоритм, в котором шаги итерации выполняются асинхронно в параллельных вычислительных системах.
 • Не требует вычислений
 
424. Где используются множественные потоки?
 
 • Решение интегральных уравнений
 • Оценка простых функций
 • Линейные уравнения
 √ Нелинейная оптимизация и машинное обучение.
 • Простые линейные задачи
 
425. Как определяется количество итераций в методе градиента на сопряжённых направлениях?
 
 • Исходя из сходимости функции
 √ На основе линейной оптимизации.
 • В зависимости от начальной точки процесса
 • По стоимости переходных затрат
 • Случайными итерациями
 
426. Какой пример можно привести для наложения сокращений?
 
 • Получение стабильных результатов.
 √ Сближение итераций
 • Стабильность параметров.
 • Получение только оптимального результата.
 • Повторение случайных результатов.
 
427. От чего зависит правильность метода итерации для нелинейных задач?
 
 • Линейность функции
 √ Повторяющиеся характеристики функции.
 • Случайность переходных вероятностей
 • Наличие динамических изменений
 • Стабильность параметров
 
428. Какую проблему решают методы итерации для нелинейных задач, которая не всегда известна?

• Задачи большого масштаба
 √ Только оптимальный результат.
 • Приспособление случайных результатов
 • Неопределённость
 • Стабильные вычислительные среды
 
429. Каково преимущество метода градиента на сопряжённых направлениях?
 
 • Решение простых задач
 √ Одновременная оптимизация множества параметров.
 • Использование только стабильных точек
 • Увеличение переходных затрат
 • Неопределённость результатов
 
430. Какова основная цель планирования ресурсов?
 
 • Сжатие ресурсов
 √ Эффективное распределение ресурсов.
 • Распределение всех ресурсов только одному процессору
 • Распределение ресурсов только нескольким процессорам
 • Применение только в асинхронных системах
 
431. Каково значение метода "snapshot" в распределённых системах?
 
 • Поиск ошибок в системе
 √ Регистрация состояния системы.
 • Установление связи между процессами
 • Отслеживание завершения процессов
 • Сортировка ресурсов
 
432. Для каких типов данных распределённые алгоритмы более эффективны?
 
 • Малые данные
 √ Большие данные.
 • Повторяющиеся операции
 • Данные для поиска
 • Простые данные
 
433. Какие данные фиксируются при получении мгновенного изображения в асинхронных системах?
 
 • Использование всех ресурсов
 √ Состояние процессов и сообщения.
 • Синхронные процессоры в системе
 • Расписание процессов
 • Ошибки в системе
 
434. Когда может быть обнаружено завершение распределённого алгоритма?
 
 • Когда завершён только один процесс.
 √ Когда все части алгоритма завершены
 • Когда каждый процессор завершает связь.
 • Когда работает только центральный процессор.
 • Когда завершены связи между процессами.
 
435. С чем связано планирование ресурсов?
 
 • Синхронизация
 √ Балансировка нагрузки.
 • Равномерное распределение ресурсов

• Управление процессами
 • Сжатие данных
 
436. Какой метод является наиболее эффективным для обнаружения завершения распределённых алгоритмов?
 
 • Анализ ошибок
 √ Методы мгновенного изображения.
 • Ограничение времени
 • Сортировка процессов
 • Обнаружение взаимных блокировок
 
437. Как регулируется работа каждого процессора в асинхронной системе?
 
 • Каждый процессор подчинён центральному управлению.
 √ Каждый процессор работает независимо
 • Процессоры сортируются по времени.
 • Процессоры работают только синхронно.
 • Процессоры взаимодействуют только друг с другом.
 
438. Какая основная трудность в обнаружении завершения распределённых алгоритмов?
 
 • Задачи выполняются параллельно
 • В системе есть только один узел
 √ Асинхронная работа процессов.
 • Отсутствие центрального управления
 • Только синхронные процессы
 
439. Какое основное преимущество метода мгновенного изображения (snapshot)?
 
 • Обеспечивает сортировку процессов
 • Применяет синхронный алгоритм
 • Оптимизирует распределение ресурсов
 √ Показывает текущее состояние системы.
 • Обеспечивает медленную обработку данных
 
440. Основная цель распределённых алгоритмов?
 
 • Очередная работа всех процессоров
 • Работа с одним процессором
 • Синхронизация процессов
 √ Параллельная обработка данных.
 • Оптимизация ресурсов
 
441. Как осуществляется распределение ресурсов?
 
 • С утверждением процесса
 • Случайным образом
 • Только одним процессором
 √ С помощью динамического планирования.
 • С помощью простой сортировки
 
442. Что обеспечивается в алгоритмах стационарных точек для нерасширяемых операторов?
 
 • Только необычные результаты
 • Существование множества стационарных точек
 • Приближение всех параметров к одному значению
 √ Существование и уникальность стационарной точки.
 • Проверка больших задач
 
443. Какие методы используются для нахождения стационарного распределения марковской цепочки?

• Глубокое обучение.
 • Метод случайного воздействия.
 • Метод Ньютона.
 √ Метод мощности
 • Алгоритм K-средних.
 
444. Для каких типов задач частично асинхронные методы более эффективны?
 
 • Простые задачи сортировки
 • Простое рисование графиков
 • Одноточечные вычисления
 √ Параллельная обработка больших задач.
 • Малые задачи
 
445. Какова цель алгоритмов адаптации?
 
 • Сортировка данных
 • Стабилизация данных
 • Более медленное нахождение решения
 • Снижение ошибок
 √ Адаптироваться к динамически изменяющимся системам.
 
446. Какова основная цель асинхронных итеративных методов?
 
 • Более медленное нахождение решения.
 • Применение только для малых задач.
 • Разработка вычислительных средств.
 √ Минимизация синхронизации
 • Применение только одного вычислительного метода.
 
447. Что означает "случайный процесс" в марковских цепочках?
 
 • Применение нелинейных функций
 √ Определение вероятности будущего состояния на основе текущего.
 • Простое вычисление следующего состояния
 • Поиск только самой вероятной опции
 • Получение только одного результата
 
448. Какой основной подход используется в алгоритмах фиксированной точки?
 
 • Глубокое обучение
 √ Итеративный подход.
 • Случайные решения
 • Кластеризация методом K-means
 • Выбор переменной параметра
 
449. Где применяются частично асинхронные методы?
 
 • В рисовании графиков.
 √ В распределенных вычислительных системах
 • В решении случайных линейных уравнений.
 • В алгоритмах поиска минимального расстояния.
 • В создании цифровых изображений.
 
450. Какие процессы анализирует цепь Маркова?
 
 • Запросы в базе данных
 √ Случайные процессы на основе вероятностей перехода.
 • Конвексная оптимизация

• Нелинейные модели
 • Математические функции
 
451. Какой алгоритм используется для негибких операторов?
 
 • Линейная регрессия
 √ Алгоритм фиксированной точки.
 • K-means
 • Naive Bayes
 • AdaBoost
 
452. Какое основное преимущество имеет частично асинхронный итеративный метод?
 
 • Большое использование памяти.
 √ Минимизация синхронизации
 • Более медленный процесс вычислений.
 • Требует полной синхронизации.
 • Обновление только одной переменной.
 
453. Какова основная цель метода асинхронного ускорения?
 
 • Выбрать минимальные сложности
 • Найти простые способы решения
 √ Параллельное решение уравнений.
 • Только оптимизация переменных
 • Только методы сортировки
 
454. Какие задачи решает алгоритм Форда-Фалкерсона?
 
 • Кратчайший путь.
 √ Максимальный поток
 • Линейные целевые функции.
 • Также максимальное расстояние.
 • Нелинейные сети.
 
455. Что гарантирует алгоритм Беллмана-Форда?
 
 • Только положительные веса
 √ Поддерживает отрицательные веса.
 • Нелинейные сети
 • Задачи с одной точкой
 • Простые модели сетей
 
456. Какие методы используются для решения задачи линейного потока?
 
 • Случайные методы
 • Нелинейные методы
 • Только сортировка
 √ Метод симплекс.
 • Эвристические методы
 
457. Что оптимизируется в алгоритме Дейкстры?
 
 • Объем потока
 √ Расстояния.
 • Нелинейные графы
 • Способы решения
 • Граничные условия
 
458. В каких задачах можно использовать асинхронное ускорение?

• Только линейные задачи
 √ Задачи с двумя граничными точками.
 • В плотных графах
 • В нелинейных задачах
 • Простые модели графов
 
459. Какие особенности существуют в задачах с нелинейным сетевым потоком?
 
 • Простые веса
 √ Нелинейные целевые функции.
 • Обеспечение максимальных потоков
 • Постоянные уравнения
 • Только положительные потоки
 
460. Какой подход используется для задачи линейного потока?
 
 • Асинхронное ускорение.
 √ Метод симплекс
 • Нелинейное динамическое программирование.
 • Алгоритм Дейкстры.
 • Линейное динамическое программирование.
 
461. Какой алгоритм следует выбрать для решения задачи кратчайшего пути?
 
 • K-means
 √ Дейкстра.
 • Беллман-Форд
 • Kruskal
 • Symplex
 
462. Где можно применить монотонные функции?
 
 • Анализ изменяющихся функций
 √ Нахождение кратчайшего пути.
 • Простые модели сетей
 • Необычные модели сетей
 • Только максимальный поток
 
463. Для какого типа сетей подходит алгоритм Беллмана-Форда?
 
 • Простые белые сети
 √ Сети с отрицательными весами.
 • Случайные сети
 • Нелинейные сети
 • Безвесовые сети
 
464. Какой алгоритм применяется для решения задачи кратчайшего пути?
 
 • K-means
 • Кластерный анализ
 • SimSim
 √ Дейкстра.
 • Naive Bayes
 
465. Почему нахождение решения для задач с нелинейным потоком сложнее?
 
 • Потому что алгоритмы неопределенные.
 √ Потому что веса ребер нелинейные
 • Потому что сеть очень сложная.

• Потому что вероятность ошибки решения высокая.
 • Потому что переменные всегда нестабильны.
 
466. Какую целевую функцию минимизируют в задаче линейного потока?
 
 • Расстояние
 √ Затраты.
 • Продукт
 • Результаты
 • Время
 
467. Что находит алгоритм Дейкстры?
 
 • Только максимальный поток.
 √ Кратчайший путь
 • Самый длинный путь между двумя точками.
 • Граничные условия.
 • Нелинейные пути.
 
468. Какие уравнения связаны с асинхронным ускорением?
 
 • Нелинейные уравнения
 √ Обычные дифференциальные уравнения.
 • Уравнения графа
 • Синусоидальные уравнения
 • Уравнения сортировки
 
469. Какой метод оптимизации более широко используется для задач с нелинейным сетевым потоком?
 
 • Метод симплекс.
 √ Градиентные методы
 • Эвристические алгоритмы.
 • Статическая оптимизация.
 • Алгоритмические уравнения.
 
470. С каким типом сетей используется алгоритм Форда-Фалкерсона?
 
 • Безвесовые сети
 √ Потоковые сети.
 • Нелинейные сети
 • Обычные сети
 • Простые графы
 
471. Какая особенность алгоритма Беллмана-Форда?
 
 • Работает только с положительными ребрами
 √ Поддерживает отрицательные ребра.
 • Быстрее
 • Меняет граф
 • Работает только с линейными сетями
 
472. Когда алгоритм Дейкстры не может быть использован?
 
 • В сетях только с положительными ребрами.
 √ В сетях с отрицательными ребрами
 • Когда требуется только кратчайший путь.
 • В нелинейных графах.
 • В очень больших графах.
 
473. Какое преимущество параллельной обработки?

• Поиск конечной точки в более долгий период.
 √ Оптимизация времени вычислений
 • Упрощение функции.
 • Замедление вычислительных операций.
 • Одноядерная обработка.
 
474. В каких областях широко используется асинхронное ускорение?
 
 • В задачах с постоянными результатами.
 • В статических задачах.
 √ Параллельные вычисления
 • В нелинейных задачах.
 • Только в повторяющихся шагах.
 
475. Какой подход более применим для задач с нелинейным сетевым потоком?
 
 • Простые линейные методы.
 √ Итеративные методы
 • Нестандартные ограничения.
 • Неопределенные методы.
 • Случайные методы.
 
476. Где даются граничные условия для задач с двумя граничными точками?
 
 • В средней точке
 √ В начальной и конечной точке.
 • В нулях функции
 • Только в начальной точке
 • В одной точке
 
477. Какую оптимизацию требует задача линейного потока?
 
 • Оптимизация нелинейной целевой функции.
 √ Оптимизация линейной целевой функции
 • Решение динамических уравнений.
 • Упорядочение значений функции.
 • Только вычисление функции.
 
478. В каких сетях применяется алгоритм Дейкстры?
 
 • В не являющийся линейным сетях.
 • В нелинейных сетях.
 √ Только с положительными весами
 • С положительными и отрицательными весами.
 • С отрицательными весами.
 
479. Какую задачу решает алгоритм Форда-Фалкерсона?
 
 • Кратчайший путь
 • Задача границы
 • Нелинейная оптимизация
 √ Максимальный поток.
 • Линейная оптимизация
 
480. Для каких типов сетевых проблем подходит алгоритм Беллмана-Форда?
 
 • Только максимальный поток
 • Линейные
 • Только кратчайший путь

√ Нелинейные.
 • Не находит кратчайшего пути
 
481. Задача линейного потока сети направлена на нахождение:
 
 • Наибольшего узла
 • Минимального расстояния
 • Кратчайшего пути
 √ Максимального потока.
 • Значения целевой функции
 
482. Какой алгоритм решает задачу нахождения кратчайшего пути?
 
 • QuickSort
 • Алгоритм Флойда-Уоршала
 • Алгоритм A
 √ Алгоритм Дейкстры.
 • MergeSort
 
483. Что означают монотонные функции?
 
 • Все виды функций
 • Постоянные функции
 • Одиночные функции
 • Обратные функции
 √ Функции, которые либо возрастают, либо убывают.
 
484. Какую роль играет максимальная норма для полностью асинхронных алгоритмов?
 
 • Используется только в повторяющихся задачах.
 • Применяется только в синхронных алгоритмах.
 • Не имеет роли.
 √ Обеспечивает сходимость
 • Важна для параллельных вычислений.
 
485. Какой критерий является основным для обеспечения сходимости полностью асинхронных алгоритмов?
 
 • Количество повторяющихся итераций
 • Только применение последовательных вычислений
 √ Функции обновления должны быть сокращающими.
 • Нелинейность
 • Использование простых параметров
 
486. В каких областях особенно полезны полностью асинхронные алгоритмы?
 
 • Нет применения
 • Только в простых задачах
 • Только в последовательных вычислениях
 √ В распределенных вычислениях и параллельных вычислительных системах.
 • Только в синхронных алгоритмах
 
487. Какое условие важно для обеспечения сходимости максимальной нормы?
 
 • Изменение максимальной ошибки.
 • Только определение параметра.
 • Последовательное выполнение каждой итерации.
 √ Минимальная задержка данных
 • Все данные обновляются одновременно.
 
488. Как выполняется каждая итерация в асинхронных алгоритмах?

• Асинхронно, используя задержку данных.
 • Только синхронно.
 • Данные обнуляются.
 • Каждая итерация выполняется одновременно.
 √ Без задержки и синхронно
 
489. Какова роль сжимающих функций в полностью асинхронных алгоритмах?
 
 • Обеспечивают наивысший результат.
 • Упрощают данные.
 • Используются только для простых задач.
 √ Обеспечивают сходимость
 • Ускоряют вычисления.
 
490. Какое преимущество параллельной работы в полностью асинхронных алгоритмах?
 
 • Может использоваться для простых задач.
 √ Увеличивает скорость сходимости
 • Работает только в обнуленных моделях.
 • Более эффективное использование вычислительных ресурсов.
 • Никогда не обеспечивает сходимость.
 
491. Как обновляются компоненты в асинхронных алгоритмах?
 
 • Все компоненты обновляются одновременно.
 √ С задержкой данных
 • Обновляется только один раз.
 • Все данные обнуляются.
 • Обновление предотвращается.
 
492. Как связано сокращение нормы в полностью асинхронном алгоритме?
 
 • С уменьшением ошибок.
 √ С обновлением данных со временем
 • С полным выполнением каждой итерации.
 • С изменением коэффициента обновления.
 • Только с типом функции.
 
493. Что обосновывает модель полностью асинхронного алгоритма?
 
 • Последовательное обновление векторов.
 • Масштаб задержки данных.
 • Синхронную работу.
 √ Совместимость функции обновления с временем
 • Непрерывность функции.
 
494. Какой параметр используется для сходимости в полностью асинхронных алгоритмах?
 
 • Простые компоненты.
 √ Задержка данных и скорость уменьшения нормы
 • Функция, работающая с одним параметром.
 • Наличие только параллельной работы.
 • Модели, работающие синхронно.
 
495. Какая область применения для полностью асинхронных алгоритмов?
 
 • Только последовательные вычисления.
 √ Параллельные и распределенные системы
 • Простые и средние приложения.

• Очень большие данные, только с последовательными алгоритмами.
 • Только повторяющиеся задачи.
 
496. Какая норма используется в полностью асинхронных алгоритмах?
 
 • Средняя норма.
 √ Максимальная норма
 • Квадратичная норма.
 • Плавная норма.
 • Минимальная норма.
 
497. Когда компоненты обновляются в асинхронных алгоритмах?
 
 • Все компоненты обновляются одновременно.
 √ Каждый компонент обновляется в свое время
 • Все компоненты получают одинаковое значение.
 • Обновление никогда не происходит.
 • Обновление связано только с временем.
 
498. Какая преимущество параллельной работы в полностью асинхронных алгоритмах?
 
 • Требует меньшего объема данных.
 √ Увеличивает скорость вычислений
 • Требует меньших ресурсов.
 • Работает только в стабильных моделях.
 • Работает только последовательно.
 
499. Какой поток данных используется в полностью асинхронных алгоритмах?
 
 • Регулярный поток данных.
 √ Нерегулярный поток данных
 • Абсолютно параллельный поток.
 • Только последовательный поток данных.
 • Поток только с задержкой данных.
 
500. Какое условие важно для обеспечения сходимости в полностью асинхронных алгоритмах?
 
 • Каждый компонент должен быть стабильным
 √ Функция обновления должна быть сжимающей.
 • Функция работает только с одним параметром
 • Должен быть применен только один шаг итерации
 • Компоненты должны обновляться только последовательно
 
501. Какой параметр важен при обновлении компонента в полностью асинхронном алгоритме?
 
 • Только начальное значение
 √ Насколько сильно задерживаются данные.
 • Тип алгоритма, работающего одновременно
 • Вычислительная мощность
 • Тип обновления
 
502. Какая особенность определена в полностью асинхронных итеративных алгоритмах?
 
 • Выполнение операций одновременно.
 √ Обновление данных на каждом шаге
 • Функция работает только с коэффициентами.
 • Применение только для больших систем.
 • Необходимость полной сходимости обновлений.
 
503. При каких условиях максимальная норма уменьшается?

• Если функция работает только со средним значением.
 √ Если функция обновления сжимающая
 • Только в закрытых системах.
 • Если функция нелинейна.
 • Если задержка данных высокая.
 
504. Каким методом параллельно работают полностью асинхронные алгоритмы?
 
 • Все компоненты обновляются одновременно.
 √ Каждый компонент обновляет свои данные
 • Каждый компонент обновляется только один раз.
 • Работает только один компонент.
 • Обновление происходит только последовательно.
 
505. Какое условие задержки данных существует в полностью асинхронных алгоритмах?
 
 • Задержка не должна быть
 √ Задержка данных должна быть ограничена.
 • Задержка должна быть минимальной
 • Задержка должна быть неопределенной
 • Задержка может быть бесконечной
 
506. При каких условиях происходит сходимость в полностью асинхронных алгоритмах?
 
 • Только при последовательных функциях
 √ При задержке данных и сжимающей функции обновления.
 • Все данные должны обновляться одновременно
 • Данные должны обрабатываться без задержек
 • При параллельных операциях
 
507. В каких вычислительных системах используются полностью асинхронные алгоритмы?
 
 • Только в последовательных системах
 √ В параллельных и распределенных системах.
 • Не используются
 • В одно процессорных системах
 • В простых вычислительных системах
 
508. Какой алгоритм должен быть полностью асинхронным?
 
 • Синхронные алгоритмы.
 √ Только итеративные алгоритмы
 • Случайные алгоритмы.
 • Нелинейные алгоритмы.
 • Распределенные алгоритмы.
 
509. Что измеряет максимальная норма в полностью асинхронных алгоритмах?
 
 • Сумму вектора.
 √ Наибольшее значение компоненты вектора
 • Наименьшее значение компоненты вектора.
 • Постоянную часть вектора.
 • Среднее значение вектора.
 
510. Что такое сходимость в полностью асинхронных алгоритмах?
 
 • Постепенное приближение результата со временем.
 • Получается только с параллельными вычислениями.
 • Сходимость возможна только в синхронных алгоритмах.

• Использование повторяющихся алгоритмов.
 √ Пошаговое нахождение решения

